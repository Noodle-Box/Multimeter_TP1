
LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003c  00800100  000014b0  00001524  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000014b0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00001560  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000015bc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000170  00000000  00000000  000015fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000017fc  00000000  00000000  0000176c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000b64  00000000  00000000  00002f68  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000e3f  00000000  00000000  00003acc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000384  00000000  00000000  0000490c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000068b  00000000  00000000  00004c90  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000e72  00000000  00000000  0000531b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000170  00000000  00000000  0000618d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b1 00 	jmp	0x162	; 0x162 <__ctors_end>
       4:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
       8:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
       c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      10:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      14:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      18:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      1c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      20:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      24:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      28:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      2c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      30:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      34:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      38:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      3c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      40:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      44:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      48:	0c 94 d9 02 	jmp	0x5b2	; 0x5b2 <__vector_18>
      4c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      50:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      54:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      58:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      5c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      60:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
      64:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 40       	sbci	r16, 0x00	; 0
      6a:	7a 10       	cpse	r7, r10
      6c:	f3 5a       	subi	r31, 0xA3	; 163
      6e:	00 a0       	ldd	r0, Z+32	; 0x20
      70:	72 4e       	sbci	r23, 0xE2	; 226
      72:	18 09       	sbc	r17, r8
      74:	00 10       	cpse	r0, r0
      76:	a5 d4       	rcall	.+2378   	; 0x9c2 <__fp_round+0x2>
      78:	e8 00       	.word	0x00e8	; ????
      7a:	00 e8       	ldi	r16, 0x80	; 128
      7c:	76 48       	sbci	r23, 0x86	; 134
      7e:	17 00       	.word	0x0017	; ????
      80:	00 e4       	ldi	r16, 0x40	; 64
      82:	0b 54       	subi	r16, 0x4B	; 75
      84:	02 00       	.word	0x0002	; ????
      86:	00 ca       	rjmp	.-3072   	; 0xfffff488 <__eeprom_end+0xff7ef488>
      88:	9a 3b       	cpi	r25, 0xBA	; 186
      8a:	00 00       	nop
      8c:	00 e1       	ldi	r16, 0x10	; 16
      8e:	f5 05       	cpc	r31, r5
      90:	00 00       	nop
      92:	80 96       	adiw	r24, 0x20	; 32
      94:	98 00       	.word	0x0098	; ????
      96:	00 00       	nop
      98:	40 42       	sbci	r20, 0x20	; 32
      9a:	0f 00       	.word	0x000f	; ????
      9c:	00 00       	nop
      9e:	a0 86       	std	Z+8, r10	; 0x08
      a0:	01 00       	.word	0x0001	; ????
      a2:	00 00       	nop
      a4:	10 27       	eor	r17, r16
      a6:	00 00       	nop
      a8:	00 00       	nop
      aa:	e8 03       	fmulsu	r22, r16
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	64 00       	.word	0x0064	; ????
      b2:	00 00       	nop
      b4:	00 00       	nop
      b6:	0a 00       	.word	0x000a	; ????
      b8:	00 00       	nop
      ba:	00 00       	nop
      bc:	01 00       	.word	0x0001	; ????
      be:	00 00       	nop
      c0:	00 00       	nop
      c2:	2c 76       	andi	r18, 0x6C	; 108
      c4:	d8 88       	ldd	r13, Y+16	; 0x10
      c6:	dc 67       	ori	r29, 0x7C	; 124
      c8:	4f 08       	sbc	r4, r15
      ca:	23 df       	rcall	.-442    	; 0xffffff12 <__eeprom_end+0xff7eff12>
      cc:	c1 df       	rcall	.-126    	; 0x50 <__SREG__+0x11>
      ce:	ae 59       	subi	r26, 0x9E	; 158
      d0:	e1 b1       	in	r30, 0x01	; 1
      d2:	b7 96       	adiw	r30, 0x27	; 39
      d4:	e5 e3       	ldi	r30, 0x35	; 53
      d6:	e4 53       	subi	r30, 0x34	; 52
      d8:	c6 3a       	cpi	r28, 0xA6	; 166
      da:	e6 51       	subi	r30, 0x16	; 22
      dc:	99 76       	andi	r25, 0x69	; 105
      de:	96 e8       	ldi	r25, 0x86	; 134
      e0:	e6 c2       	rjmp	.+1484   	; 0x6ae <main+0x26>
      e2:	84 26       	eor	r8, r20
      e4:	eb 89       	ldd	r30, Y+19	; 0x13
      e6:	8c 9b       	sbis	0x11, 4	; 17
      e8:	62 ed       	ldi	r22, 0xD2	; 210
      ea:	40 7c       	andi	r20, 0xC0	; 192
      ec:	6f fc       	.word	0xfc6f	; ????
      ee:	ef bc       	out	0x2f, r14	; 47
      f0:	9c 9f       	mul	r25, r28
      f2:	40 f2       	brcs	.-112    	; 0x84 <__trampolines_end+0x1c>
      f4:	ba a5       	ldd	r27, Y+42	; 0x2a
      f6:	6f a5       	ldd	r22, Y+47	; 0x2f
      f8:	f4 90       	lpm	r15, Z
      fa:	05 5a       	subi	r16, 0xA5	; 165
      fc:	2a f7       	brpl	.-54     	; 0xc8 <__trampolines_end+0x60>
      fe:	5c 93       	st	X, r21
     100:	6b 6c       	ori	r22, 0xCB	; 203
     102:	f9 67       	ori	r31, 0x79	; 121
     104:	6d c1       	rjmp	.+730    	; 0x3e0 <i2c_start_wait>
     106:	1b fc       	.word	0xfc1b	; ????
     108:	e0 e4       	ldi	r30, 0x40	; 64
     10a:	0d 47       	sbci	r16, 0x7D	; 125
     10c:	fe f5       	brtc	.+126    	; 0x18c <.do_clear_bss_loop>
     10e:	20 e6       	ldi	r18, 0x60	; 96
     110:	b5 00       	.word	0x00b5	; ????
     112:	d0 ed       	ldi	r29, 0xD0	; 208
     114:	90 2e       	mov	r9, r16
     116:	03 00       	.word	0x0003	; ????
     118:	94 35       	cpi	r25, 0x54	; 84
     11a:	77 05       	cpc	r23, r7
     11c:	00 80       	ld	r0, Z
     11e:	84 1e       	adc	r8, r20
     120:	08 00       	.word	0x0008	; ????
     122:	00 20       	and	r0, r0
     124:	4e 0a       	sbc	r4, r30
     126:	00 00       	nop
     128:	00 c8       	rjmp	.-4096   	; 0xfffff12a <__eeprom_end+0xff7ef12a>
     12a:	0c 33       	cpi	r16, 0x3C	; 60
     12c:	33 33       	cpi	r19, 0x33	; 51
     12e:	33 0f       	add	r19, r19
     130:	98 6e       	ori	r25, 0xE8	; 232
     132:	12 83       	std	Z+2, r17	; 0x02
     134:	11 41       	sbci	r17, 0x11	; 17
     136:	ef 8d       	ldd	r30, Y+31	; 0x1f
     138:	21 14       	cp	r2, r1
     13a:	89 3b       	cpi	r24, 0xB9	; 185
     13c:	e6 55       	subi	r30, 0x56	; 86
     13e:	16 cf       	rjmp	.-468    	; 0xffffff6c <__eeprom_end+0xff7eff6c>
     140:	fe e6       	ldi	r31, 0x6E	; 110
     142:	db 18       	sub	r13, r11
     144:	d1 84       	ldd	r13, Z+9	; 0x09
     146:	4b 38       	cpi	r20, 0x8B	; 139
     148:	1b f7       	brvc	.-58     	; 0x110 <__trampolines_end+0xa8>
     14a:	7c 1d       	adc	r23, r12
     14c:	90 1d       	adc	r25, r0
     14e:	a4 bb       	out	0x14, r26	; 20
     150:	e4 24       	eor	r14, r4
     152:	20 32       	cpi	r18, 0x20	; 32
     154:	84 72       	andi	r24, 0x24	; 36
     156:	5e 22       	and	r5, r30
     158:	81 00       	.word	0x0081	; ????
     15a:	c9 f1       	breq	.+114    	; 0x1ce <lcd_write+0x26>
     15c:	24 ec       	ldi	r18, 0xC4	; 196
     15e:	a1 e5       	ldi	r26, 0x51	; 81
     160:	3d 27       	eor	r19, r29

00000162 <__ctors_end>:
     162:	11 24       	eor	r1, r1
     164:	1f be       	out	0x3f, r1	; 63
     166:	cf ef       	ldi	r28, 0xFF	; 255
     168:	d8 e0       	ldi	r29, 0x08	; 8
     16a:	de bf       	out	0x3e, r29	; 62
     16c:	cd bf       	out	0x3d, r28	; 61

0000016e <__do_copy_data>:
     16e:	11 e0       	ldi	r17, 0x01	; 1
     170:	a0 e0       	ldi	r26, 0x00	; 0
     172:	b1 e0       	ldi	r27, 0x01	; 1
     174:	e0 eb       	ldi	r30, 0xB0	; 176
     176:	f4 e1       	ldi	r31, 0x14	; 20
     178:	02 c0       	rjmp	.+4      	; 0x17e <__do_copy_data+0x10>
     17a:	05 90       	lpm	r0, Z+
     17c:	0d 92       	st	X+, r0
     17e:	ac 33       	cpi	r26, 0x3C	; 60
     180:	b1 07       	cpc	r27, r17
     182:	d9 f7       	brne	.-10     	; 0x17a <__do_copy_data+0xc>

00000184 <__do_clear_bss>:
     184:	21 e0       	ldi	r18, 0x01	; 1
     186:	ac e3       	ldi	r26, 0x3C	; 60
     188:	b1 e0       	ldi	r27, 0x01	; 1
     18a:	01 c0       	rjmp	.+2      	; 0x18e <.do_clear_bss_start>

0000018c <.do_clear_bss_loop>:
     18c:	1d 92       	st	X+, r1

0000018e <.do_clear_bss_start>:
     18e:	ac 33       	cpi	r26, 0x3C	; 60
     190:	b2 07       	cpc	r27, r18
     192:	e1 f7       	brne	.-8      	; 0x18c <.do_clear_bss_loop>
     194:	0e 94 44 03 	call	0x688	; 0x688 <main>
     198:	0c 94 56 0a 	jmp	0x14ac	; 0x14ac <_exit>

0000019c <__bad_interrupt>:
     19c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a0 <toggle_e>:

    while ( (c = pgm_read_byte(progmem_s++)) ) {
        lcd_putc(c);
    }

}/* lcd_puts_p */
     1a0:	2a 9a       	sbi	0x05, 2	; 5
     1a2:	00 c0       	rjmp	.+0      	; 0x1a4 <toggle_e+0x4>
     1a4:	2a 98       	cbi	0x05, 2	; 5
     1a6:	08 95       	ret

000001a8 <lcd_write>:
     1a8:	cf 93       	push	r28
     1aa:	c8 2f       	mov	r28, r24
     1ac:	66 23       	and	r22, r22
     1ae:	11 f0       	breq	.+4      	; 0x1b4 <lcd_write+0xc>
     1b0:	28 9a       	sbi	0x05, 0	; 5
     1b2:	01 c0       	rjmp	.+2      	; 0x1b6 <lcd_write+0xe>
     1b4:	28 98       	cbi	0x05, 0	; 5
     1b6:	29 98       	cbi	0x05, 1	; 5
     1b8:	24 9a       	sbi	0x04, 4	; 4
     1ba:	25 9a       	sbi	0x04, 5	; 4
     1bc:	26 9a       	sbi	0x04, 6	; 4
     1be:	27 9a       	sbi	0x04, 7	; 4
     1c0:	2f 98       	cbi	0x05, 7	; 5
     1c2:	2e 98       	cbi	0x05, 6	; 5
     1c4:	2d 98       	cbi	0x05, 5	; 5
     1c6:	2c 98       	cbi	0x05, 4	; 5
     1c8:	cc 23       	and	r28, r28
     1ca:	0c f4       	brge	.+2      	; 0x1ce <lcd_write+0x26>
     1cc:	2f 9a       	sbi	0x05, 7	; 5
     1ce:	c6 fd       	sbrc	r28, 6
     1d0:	2e 9a       	sbi	0x05, 6	; 5
     1d2:	c5 fd       	sbrc	r28, 5
     1d4:	2d 9a       	sbi	0x05, 5	; 5
     1d6:	c4 fd       	sbrc	r28, 4
     1d8:	2c 9a       	sbi	0x05, 4	; 5
     1da:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <toggle_e>
     1de:	2f 98       	cbi	0x05, 7	; 5
     1e0:	2e 98       	cbi	0x05, 6	; 5
     1e2:	2d 98       	cbi	0x05, 5	; 5
     1e4:	2c 98       	cbi	0x05, 4	; 5
     1e6:	c3 fd       	sbrc	r28, 3
     1e8:	2f 9a       	sbi	0x05, 7	; 5
     1ea:	c2 fd       	sbrc	r28, 2
     1ec:	2e 9a       	sbi	0x05, 6	; 5
     1ee:	c1 fd       	sbrc	r28, 1
     1f0:	2d 9a       	sbi	0x05, 5	; 5
     1f2:	c0 fd       	sbrc	r28, 0
     1f4:	2c 9a       	sbi	0x05, 4	; 5
     1f6:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <toggle_e>
     1fa:	2c 9a       	sbi	0x05, 4	; 5
     1fc:	2d 9a       	sbi	0x05, 5	; 5
     1fe:	2e 9a       	sbi	0x05, 6	; 5
     200:	2f 9a       	sbi	0x05, 7	; 5
     202:	cf 91       	pop	r28
     204:	08 95       	ret

00000206 <lcd_read>:
     206:	88 23       	and	r24, r24
     208:	11 f0       	breq	.+4      	; 0x20e <lcd_read+0x8>
     20a:	28 9a       	sbi	0x05, 0	; 5
     20c:	01 c0       	rjmp	.+2      	; 0x210 <lcd_read+0xa>
     20e:	28 98       	cbi	0x05, 0	; 5
     210:	29 9a       	sbi	0x05, 1	; 5
     212:	24 98       	cbi	0x04, 4	; 4
     214:	25 98       	cbi	0x04, 5	; 4
     216:	26 98       	cbi	0x04, 6	; 4
     218:	27 98       	cbi	0x04, 7	; 4
     21a:	2a 9a       	sbi	0x05, 2	; 5
     21c:	00 c0       	rjmp	.+0      	; 0x21e <lcd_read+0x18>
     21e:	1c 9b       	sbis	0x03, 4	; 3
     220:	02 c0       	rjmp	.+4      	; 0x226 <lcd_read+0x20>
     222:	80 e1       	ldi	r24, 0x10	; 16
     224:	01 c0       	rjmp	.+2      	; 0x228 <lcd_read+0x22>
     226:	80 e0       	ldi	r24, 0x00	; 0
     228:	1d 99       	sbic	0x03, 5	; 3
     22a:	80 62       	ori	r24, 0x20	; 32
     22c:	1e 99       	sbic	0x03, 6	; 3
     22e:	80 64       	ori	r24, 0x40	; 64
     230:	1f 99       	sbic	0x03, 7	; 3
     232:	80 68       	ori	r24, 0x80	; 128
     234:	2a 98       	cbi	0x05, 2	; 5
     236:	00 c0       	rjmp	.+0      	; 0x238 <lcd_read+0x32>
     238:	2a 9a       	sbi	0x05, 2	; 5
     23a:	00 c0       	rjmp	.+0      	; 0x23c <lcd_read+0x36>
     23c:	1c 99       	sbic	0x03, 4	; 3
     23e:	81 60       	ori	r24, 0x01	; 1
     240:	1d 99       	sbic	0x03, 5	; 3
     242:	82 60       	ori	r24, 0x02	; 2
     244:	1e 99       	sbic	0x03, 6	; 3
     246:	84 60       	ori	r24, 0x04	; 4
     248:	1f 99       	sbic	0x03, 7	; 3
     24a:	88 60       	ori	r24, 0x08	; 8
     24c:	2a 98       	cbi	0x05, 2	; 5
     24e:	08 95       	ret

00000250 <lcd_waitbusy>:
     250:	80 e0       	ldi	r24, 0x00	; 0
     252:	0e 94 03 01 	call	0x206	; 0x206 <lcd_read>
     256:	88 23       	and	r24, r24
     258:	dc f3       	brlt	.-10     	; 0x250 <lcd_waitbusy>
     25a:	88 e0       	ldi	r24, 0x08	; 8
     25c:	90 e0       	ldi	r25, 0x00	; 0
     25e:	01 97       	sbiw	r24, 0x01	; 1
     260:	f1 f7       	brne	.-4      	; 0x25e <lcd_waitbusy+0xe>
     262:	80 e0       	ldi	r24, 0x00	; 0
     264:	0e 94 03 01 	call	0x206	; 0x206 <lcd_read>
     268:	08 95       	ret

0000026a <lcd_command>:
     26a:	cf 93       	push	r28
     26c:	c8 2f       	mov	r28, r24
     26e:	0e 94 28 01 	call	0x250	; 0x250 <lcd_waitbusy>
     272:	60 e0       	ldi	r22, 0x00	; 0
     274:	8c 2f       	mov	r24, r28
     276:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <lcd_write>
     27a:	cf 91       	pop	r28
     27c:	08 95       	ret

0000027e <lcd_gotoxy>:
     27e:	61 11       	cpse	r22, r1
     280:	04 c0       	rjmp	.+8      	; 0x28a <lcd_gotoxy+0xc>
     282:	80 58       	subi	r24, 0x80	; 128
     284:	0e 94 35 01 	call	0x26a	; 0x26a <lcd_command>
     288:	08 95       	ret
     28a:	61 30       	cpi	r22, 0x01	; 1
     28c:	21 f4       	brne	.+8      	; 0x296 <lcd_gotoxy+0x18>
     28e:	80 54       	subi	r24, 0x40	; 64
     290:	0e 94 35 01 	call	0x26a	; 0x26a <lcd_command>
     294:	08 95       	ret
     296:	62 30       	cpi	r22, 0x02	; 2
     298:	21 f4       	brne	.+8      	; 0x2a2 <lcd_gotoxy+0x24>
     29a:	8c 56       	subi	r24, 0x6C	; 108
     29c:	0e 94 35 01 	call	0x26a	; 0x26a <lcd_command>
     2a0:	08 95       	ret
     2a2:	8c 52       	subi	r24, 0x2C	; 44
     2a4:	0e 94 35 01 	call	0x26a	; 0x26a <lcd_command>
     2a8:	08 95       	ret

000002aa <lcd_clrscr>:
     2aa:	81 e0       	ldi	r24, 0x01	; 1
     2ac:	0e 94 35 01 	call	0x26a	; 0x26a <lcd_command>
     2b0:	08 95       	ret

000002b2 <lcd_putc>:
     2b2:	cf 93       	push	r28
     2b4:	c8 2f       	mov	r28, r24
     2b6:	0e 94 28 01 	call	0x250	; 0x250 <lcd_waitbusy>
     2ba:	ca 30       	cpi	r28, 0x0A	; 10
     2bc:	a1 f4       	brne	.+40     	; 0x2e6 <lcd_putc+0x34>
     2be:	84 31       	cpi	r24, 0x14	; 20
     2c0:	48 f0       	brcs	.+18     	; 0x2d4 <lcd_putc+0x22>
     2c2:	90 ec       	ldi	r25, 0xC0	; 192
     2c4:	98 0f       	add	r25, r24
     2c6:	94 31       	cpi	r25, 0x14	; 20
     2c8:	38 f0       	brcs	.+14     	; 0x2d8 <lcd_putc+0x26>
     2ca:	84 51       	subi	r24, 0x14	; 20
     2cc:	8c 32       	cpi	r24, 0x2C	; 44
     2ce:	30 f0       	brcs	.+12     	; 0x2dc <lcd_putc+0x2a>
     2d0:	80 e0       	ldi	r24, 0x00	; 0
     2d2:	05 c0       	rjmp	.+10     	; 0x2de <lcd_putc+0x2c>
     2d4:	80 e4       	ldi	r24, 0x40	; 64
     2d6:	03 c0       	rjmp	.+6      	; 0x2de <lcd_putc+0x2c>
     2d8:	84 e1       	ldi	r24, 0x14	; 20
     2da:	01 c0       	rjmp	.+2      	; 0x2de <lcd_putc+0x2c>
     2dc:	84 e5       	ldi	r24, 0x54	; 84
     2de:	80 58       	subi	r24, 0x80	; 128
     2e0:	0e 94 35 01 	call	0x26a	; 0x26a <lcd_command>
     2e4:	04 c0       	rjmp	.+8      	; 0x2ee <lcd_putc+0x3c>
     2e6:	61 e0       	ldi	r22, 0x01	; 1
     2e8:	8c 2f       	mov	r24, r28
     2ea:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <lcd_write>
     2ee:	cf 91       	pop	r28
     2f0:	08 95       	ret

000002f2 <lcd_puts>:
     2f2:	cf 93       	push	r28
     2f4:	df 93       	push	r29
     2f6:	ec 01       	movw	r28, r24
     2f8:	21 96       	adiw	r28, 0x01	; 1
     2fa:	fc 01       	movw	r30, r24
     2fc:	80 81       	ld	r24, Z
     2fe:	88 23       	and	r24, r24
     300:	29 f0       	breq	.+10     	; 0x30c <lcd_puts+0x1a>
     302:	0e 94 59 01 	call	0x2b2	; 0x2b2 <lcd_putc>
     306:	89 91       	ld	r24, Y+
     308:	81 11       	cpse	r24, r1
     30a:	fb cf       	rjmp	.-10     	; 0x302 <lcd_puts+0x10>
     30c:	df 91       	pop	r29
     30e:	cf 91       	pop	r28
     310:	08 95       	ret

00000312 <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
     312:	1f 93       	push	r17
     314:	cf 93       	push	r28
     316:	df 93       	push	r29
     318:	18 2f       	mov	r17, r24
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
    }
    else
    {
        /* configure all port bits as output (LCD data and control lines on different ports */
        DDR(LCD_RS_PORT)    |= _BV(LCD_RS_PIN);
     31a:	20 9a       	sbi	0x04, 0	; 4
        DDR(LCD_RW_PORT)    |= _BV(LCD_RW_PIN);
     31c:	21 9a       	sbi	0x04, 1	; 4
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
     31e:	22 9a       	sbi	0x04, 2	; 4
        DDR(LCD_DATA0_PORT) |= _BV(LCD_DATA0_PIN);
     320:	24 9a       	sbi	0x04, 4	; 4
        DDR(LCD_DATA1_PORT) |= _BV(LCD_DATA1_PIN);
     322:	25 9a       	sbi	0x04, 5	; 4
        DDR(LCD_DATA2_PORT) |= _BV(LCD_DATA2_PIN);
     324:	26 9a       	sbi	0x04, 6	; 4
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
     326:	27 9a       	sbi	0x04, 7	; 4
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     328:	80 e0       	ldi	r24, 0x00	; 0
     32a:	9a ef       	ldi	r25, 0xFA	; 250
     32c:	01 97       	sbiw	r24, 0x01	; 1
     32e:	f1 f7       	brne	.-4      	; 0x32c <lcd_init+0x1a>
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
    }
    delay(16000);        /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);  // _BV(LCD_FUNCTION)>>4;
     330:	2d 9a       	sbi	0x05, 5	; 5
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);  // _BV(LCD_FUNCTION_8BIT)>>4;
     332:	2c 9a       	sbi	0x05, 4	; 5
    lcd_e_toggle();
     334:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     338:	80 e0       	ldi	r24, 0x00	; 0
     33a:	9e e4       	ldi	r25, 0x4E	; 78
     33c:	01 97       	sbiw	r24, 0x01	; 1
     33e:	f1 f7       	brne	.-4      	; 0x33c <lcd_init+0x2a>
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);  // _BV(LCD_FUNCTION_8BIT)>>4;
    lcd_e_toggle();
    delay(4992);         /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
     340:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     344:	c0 e0       	ldi	r28, 0x00	; 0
     346:	d1 e0       	ldi	r29, 0x01	; 1
     348:	ce 01       	movw	r24, r28
     34a:	01 97       	sbiw	r24, 0x01	; 1
     34c:	f1 f7       	brne	.-4      	; 0x34a <lcd_init+0x38>
    /* repeat last command */ 
    lcd_e_toggle();      
    delay(64);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
     34e:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     352:	ce 01       	movw	r24, r28
     354:	01 97       	sbiw	r24, 0x01	; 1
     356:	f1 f7       	brne	.-4      	; 0x354 <lcd_init+0x42>
    /* repeat last command a third time */
    lcd_e_toggle();      
    delay(64);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
     358:	2c 98       	cbi	0x05, 4	; 5
    lcd_e_toggle();
     35a:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     35e:	21 97       	sbiw	r28, 0x01	; 1
     360:	f1 f7       	brne	.-4      	; 0x35e <lcd_init+0x4c>
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
     362:	88 e2       	ldi	r24, 0x28	; 40
     364:	0e 94 35 01 	call	0x26a	; 0x26a <lcd_command>
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
     368:	88 e0       	ldi	r24, 0x08	; 8
     36a:	0e 94 35 01 	call	0x26a	; 0x26a <lcd_command>
    lcd_clrscr();                           /* display clear                */ 
     36e:	0e 94 55 01 	call	0x2aa	; 0x2aa <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
     372:	86 e0       	ldi	r24, 0x06	; 6
     374:	0e 94 35 01 	call	0x26a	; 0x26a <lcd_command>
    lcd_command(dispAttr);                  /* display/cursor control       */
     378:	81 2f       	mov	r24, r17
     37a:	0e 94 35 01 	call	0x26a	; 0x26a <lcd_command>

}/* lcd_init */
     37e:	df 91       	pop	r29
     380:	cf 91       	pop	r28
     382:	1f 91       	pop	r17
     384:	08 95       	ret

00000386 <i2c_init>:
*************************************************************************/
void i2c_init(void)
{
  /* initialize TWI clock: 100 kHz clock, TWPS = 0 => prescaler = 1 */
  
  TWSR = 0;                         /* no prescaler */
     386:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
  TWBR = ((F_CPU/SCL_CLOCK)-16)/2;  /* must be > 10 for stable operation */
     38a:	8c e0       	ldi	r24, 0x0C	; 12
     38c:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
     390:	08 95       	ret

00000392 <i2c_start>:
unsigned char i2c_start(unsigned char address)
{
    uint8_t   twst;

	// send START condition
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     392:	94 ea       	ldi	r25, 0xA4	; 164
     394:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     398:	ec eb       	ldi	r30, 0xBC	; 188
     39a:	f0 e0       	ldi	r31, 0x00	; 0
     39c:	90 81       	ld	r25, Z
     39e:	99 23       	and	r25, r25
     3a0:	ec f7       	brge	.-6      	; 0x39c <i2c_start+0xa>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     3a2:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
     3a6:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
     3a8:	98 30       	cpi	r25, 0x08	; 8
     3aa:	11 f0       	breq	.+4      	; 0x3b0 <i2c_start+0x1e>
     3ac:	90 31       	cpi	r25, 0x10	; 16
     3ae:	a1 f4       	brne	.+40     	; 0x3d8 <i2c_start+0x46>

	// send device address
	TWDR = address;
     3b0:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1<<TWINT) | (1<<TWEN);
     3b4:	84 e8       	ldi	r24, 0x84	; 132
     3b6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	// wail until transmission completed and ACK/NACK has been received
	while(!(TWCR & (1<<TWINT)));
     3ba:	ec eb       	ldi	r30, 0xBC	; 188
     3bc:	f0 e0       	ldi	r31, 0x00	; 0
     3be:	80 81       	ld	r24, Z
     3c0:	88 23       	and	r24, r24
     3c2:	ec f7       	brge	.-6      	; 0x3be <i2c_start+0x2c>

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
     3c4:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
     3c8:	98 7f       	andi	r25, 0xF8	; 248
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;
     3ca:	98 31       	cpi	r25, 0x18	; 24
     3cc:	39 f0       	breq	.+14     	; 0x3dc <i2c_start+0x4a>
	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
	if ( (twst != TW_START) && (twst != TW_REP_START)) return 1;
     3ce:	81 e0       	ldi	r24, 0x01	; 1
     3d0:	90 34       	cpi	r25, 0x40	; 64
     3d2:	29 f4       	brne	.+10     	; 0x3de <i2c_start+0x4c>
     3d4:	80 e0       	ldi	r24, 0x00	; 0
     3d6:	08 95       	ret
     3d8:	81 e0       	ldi	r24, 0x01	; 1
     3da:	08 95       	ret

	// check value of TWI Status Register. Mask prescaler bits.
	twst = TW_STATUS & 0xF8;
	if ( (twst != TW_MT_SLA_ACK) && (twst != TW_MR_SLA_ACK) ) return 1;

	return 0;
     3dc:	80 e0       	ldi	r24, 0x00	; 0

}/* i2c_start */
     3de:	08 95       	ret

000003e0 <i2c_start_wait>:
 If device is busy, use ack polling to wait until device is ready
 
 Input:   address and transfer direction of I2C device
*************************************************************************/
void i2c_start_wait(unsigned char address)
{
     3e0:	cf 93       	push	r28
     3e2:	df 93       	push	r29


    while ( 1 )
    {
	    // send START condition
	    TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     3e4:	ec eb       	ldi	r30, 0xBC	; 188
     3e6:	f0 e0       	ldi	r31, 0x00	; 0
     3e8:	24 ea       	ldi	r18, 0xA4	; 164
    
    	// wait until transmission completed
    	while(!(TWCR & (1<<TWINT)));
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
     3ea:	a9 eb       	ldi	r26, 0xB9	; 185
     3ec:	b0 e0       	ldi	r27, 0x00	; 0
    	if ( (twst != TW_START) && (twst != TW_REP_START)) continue;
    
    	// send device address
    	TWDR = address;
     3ee:	cb eb       	ldi	r28, 0xBB	; 187
     3f0:	d0 e0       	ldi	r29, 0x00	; 0
    	TWCR = (1<<TWINT) | (1<<TWEN);
     3f2:	34 e8       	ldi	r19, 0x84	; 132
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
    	if ( (twst == TW_MT_SLA_NACK )||(twst ==TW_MR_DATA_NACK) ) 
    	{    	    
    	    /* device busy, send stop condition to terminate write operation */
	        TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     3f4:	44 e9       	ldi	r20, 0x94	; 148


    while ( 1 )
    {
	    // send START condition
	    TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     3f6:	20 83       	st	Z, r18
    
    	// wait until transmission completed
    	while(!(TWCR & (1<<TWINT)));
     3f8:	90 81       	ld	r25, Z
     3fa:	99 23       	and	r25, r25
     3fc:	ec f7       	brge	.-6      	; 0x3f8 <i2c_start_wait+0x18>
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
     3fe:	9c 91       	ld	r25, X
     400:	98 7f       	andi	r25, 0xF8	; 248
    	if ( (twst != TW_START) && (twst != TW_REP_START)) continue;
     402:	98 30       	cpi	r25, 0x08	; 8
     404:	11 f0       	breq	.+4      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
     406:	90 31       	cpi	r25, 0x10	; 16
     408:	b1 f7       	brne	.-20     	; 0x3f6 <i2c_start_wait+0x16>
    
    	// send device address
    	TWDR = address;
     40a:	88 83       	st	Y, r24
    	TWCR = (1<<TWINT) | (1<<TWEN);
     40c:	30 83       	st	Z, r19
    
    	// wail until transmission completed
    	while(!(TWCR & (1<<TWINT)));
     40e:	90 81       	ld	r25, Z
     410:	99 23       	and	r25, r25
     412:	ec f7       	brge	.-6      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
    
    	// check value of TWI Status Register. Mask prescaler bits.
    	twst = TW_STATUS & 0xF8;
     414:	9c 91       	ld	r25, X
     416:	98 7f       	andi	r25, 0xF8	; 248
    	if ( (twst == TW_MT_SLA_NACK )||(twst ==TW_MR_DATA_NACK) ) 
     418:	90 32       	cpi	r25, 0x20	; 32
     41a:	11 f0       	breq	.+4      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     41c:	98 35       	cpi	r25, 0x58	; 88
     41e:	29 f4       	brne	.+10     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
    	{    	    
    	    /* device busy, send stop condition to terminate write operation */
	        TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     420:	40 83       	st	Z, r20
	        
	        // wait until stop condition is executed and bus released
	        while(TWCR & (1<<TWSTO));
     422:	90 81       	ld	r25, Z
     424:	94 fd       	sbrc	r25, 4
     426:	fd cf       	rjmp	.-6      	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     428:	e6 cf       	rjmp	.-52     	; 0x3f6 <i2c_start_wait+0x16>
    	}
    	//if( twst != TW_MT_SLA_ACK) return 1;
    	break;
     }

}/* i2c_start_wait */
     42a:	df 91       	pop	r29
     42c:	cf 91       	pop	r28
     42e:	08 95       	ret

00000430 <i2c_rep_start>:
 Return:  0 device accessible
          1 failed to access device
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );
     430:	0e 94 c9 01 	call	0x392	; 0x392 <i2c_start>

}/* i2c_rep_start */
     434:	08 95       	ret

00000436 <i2c_stop>:
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void)
{
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     436:	84 e9       	ldi	r24, 0x94	; 148
     438:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	
	// wait until stop condition is executed and bus released
	while(TWCR & (1<<TWSTO));
     43c:	ec eb       	ldi	r30, 0xBC	; 188
     43e:	f0 e0       	ldi	r31, 0x00	; 0
     440:	80 81       	ld	r24, Z
     442:	84 fd       	sbrc	r24, 4
     444:	fd cf       	rjmp	.-6      	; 0x440 <i2c_stop+0xa>

}/* i2c_stop */
     446:	08 95       	ret

00000448 <i2c_write>:
unsigned char i2c_write( unsigned char data )
{	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     448:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR = (1<<TWINT) | (1<<TWEN);
     44c:	84 e8       	ldi	r24, 0x84	; 132
     44e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     452:	ec eb       	ldi	r30, 0xBC	; 188
     454:	f0 e0       	ldi	r31, 0x00	; 0
     456:	80 81       	ld	r24, Z
     458:	88 23       	and	r24, r24
     45a:	ec f7       	brge	.-6      	; 0x456 <i2c_write+0xe>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     45c:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
     460:	98 7f       	andi	r25, 0xF8	; 248
     462:	81 e0       	ldi	r24, 0x01	; 1
     464:	98 32       	cpi	r25, 0x28	; 40
     466:	09 f4       	brne	.+2      	; 0x46a <i2c_write+0x22>
     468:	80 e0       	ldi	r24, 0x00	; 0
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
     46a:	08 95       	ret

0000046c <i2c_readAck>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readAck(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     46c:	84 ec       	ldi	r24, 0xC4	; 196
     46e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while(!(TWCR & (1<<TWINT)));    
     472:	ec eb       	ldi	r30, 0xBC	; 188
     474:	f0 e0       	ldi	r31, 0x00	; 0
     476:	80 81       	ld	r24, Z
     478:	88 23       	and	r24, r24
     47a:	ec f7       	brge	.-6      	; 0x476 <i2c_readAck+0xa>

    return TWDR;
     47c:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>

}/* i2c_readAck */
     480:	08 95       	ret

00000482 <i2c_readNak>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
     482:	84 e8       	ldi	r24, 0x84	; 132
     484:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while(!(TWCR & (1<<TWINT)));
     488:	ec eb       	ldi	r30, 0xBC	; 188
     48a:	f0 e0       	ldi	r31, 0x00	; 0
     48c:	80 81       	ld	r24, Z
     48e:	88 23       	and	r24, r24
     490:	ec f7       	brge	.-6      	; 0x48c <i2c_readNak+0xa>
	
    return TWDR;
     492:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>

}/* i2c_readNak */
     496:	08 95       	ret

00000498 <change_brightness>:
	 * Read from channel 0 on ads1115 for a given config reg
	 */
	ads1115_write(addr, ADS1115_REG_CONFIG, configReg);
	_delay_ms(8);
	return ads1115_read(addr, ADS1115_REG_CONVERSION);
}
     498:	ef 92       	push	r14
     49a:	ff 92       	push	r15
     49c:	0f 93       	push	r16
     49e:	1f 93       	push	r17
     4a0:	cf 93       	push	r28
     4a2:	df 93       	push	r29
     4a4:	85 30       	cpi	r24, 0x05	; 5
     4a6:	91 05       	cpc	r25, r1
     4a8:	04 f5       	brge	.+64     	; 0x4ea <change_brightness+0x52>
     4aa:	7c 01       	movw	r14, r24
     4ac:	c3 e0       	ldi	r28, 0x03	; 3
     4ae:	6c 2f       	mov	r22, r28
     4b0:	83 e1       	ldi	r24, 0x13	; 19
     4b2:	0e 94 3f 01 	call	0x27e	; 0x27e <lcd_gotoxy>
     4b6:	80 e0       	ldi	r24, 0x00	; 0
     4b8:	91 e0       	ldi	r25, 0x01	; 1
     4ba:	0e 94 79 01 	call	0x2f2	; 0x2f2 <lcd_puts>
     4be:	c1 50       	subi	r28, 0x01	; 1
     4c0:	b0 f7       	brcc	.-20     	; 0x4ae <change_brightness+0x16>
     4c2:	04 e0       	ldi	r16, 0x04	; 4
     4c4:	10 e0       	ldi	r17, 0x00	; 0
     4c6:	0e 19       	sub	r16, r14
     4c8:	1f 09       	sbc	r17, r15
     4ca:	05 30       	cpi	r16, 0x05	; 5
     4cc:	11 05       	cpc	r17, r1
     4ce:	6c f4       	brge	.+26     	; 0x4ea <change_brightness+0x52>
     4d0:	c4 e0       	ldi	r28, 0x04	; 4
     4d2:	d0 e0       	ldi	r29, 0x00	; 0
     4d4:	6c 2f       	mov	r22, r28
     4d6:	83 e1       	ldi	r24, 0x13	; 19
     4d8:	0e 94 3f 01 	call	0x27e	; 0x27e <lcd_gotoxy>
     4dc:	8f ef       	ldi	r24, 0xFF	; 255
     4de:	0e 94 59 01 	call	0x2b2	; 0x2b2 <lcd_putc>
     4e2:	21 97       	sbiw	r28, 0x01	; 1
     4e4:	c0 17       	cp	r28, r16
     4e6:	d1 07       	cpc	r29, r17
     4e8:	ac f7       	brge	.-22     	; 0x4d4 <change_brightness+0x3c>
     4ea:	df 91       	pop	r29
     4ec:	cf 91       	pop	r28
     4ee:	1f 91       	pop	r17
     4f0:	0f 91       	pop	r16
     4f2:	ff 90       	pop	r15
     4f4:	ef 90       	pop	r14
     4f6:	08 95       	ret

000004f8 <change_mode>:
     4f8:	81 30       	cpi	r24, 0x01	; 1
     4fa:	91 05       	cpc	r25, r1
     4fc:	59 f4       	brne	.+22     	; 0x514 <change_mode+0x1c>
     4fe:	0e 94 55 01 	call	0x2aa	; 0x2aa <lcd_clrscr>
     502:	60 e0       	ldi	r22, 0x00	; 0
     504:	80 e0       	ldi	r24, 0x00	; 0
     506:	0e 94 3f 01 	call	0x27e	; 0x27e <lcd_gotoxy>
     50a:	82 e0       	ldi	r24, 0x02	; 2
     50c:	91 e0       	ldi	r25, 0x01	; 1
     50e:	0e 94 79 01 	call	0x2f2	; 0x2f2 <lcd_puts>
     512:	08 95       	ret
     514:	82 30       	cpi	r24, 0x02	; 2
     516:	91 05       	cpc	r25, r1
     518:	59 f4       	brne	.+22     	; 0x530 <change_mode+0x38>
     51a:	0e 94 55 01 	call	0x2aa	; 0x2aa <lcd_clrscr>
     51e:	60 e0       	ldi	r22, 0x00	; 0
     520:	80 e0       	ldi	r24, 0x00	; 0
     522:	0e 94 3f 01 	call	0x27e	; 0x27e <lcd_gotoxy>
     526:	8e e0       	ldi	r24, 0x0E	; 14
     528:	91 e0       	ldi	r25, 0x01	; 1
     52a:	0e 94 79 01 	call	0x2f2	; 0x2f2 <lcd_puts>
     52e:	08 95       	ret
     530:	83 30       	cpi	r24, 0x03	; 3
     532:	91 05       	cpc	r25, r1
     534:	59 f4       	brne	.+22     	; 0x54c <change_mode+0x54>
     536:	0e 94 55 01 	call	0x2aa	; 0x2aa <lcd_clrscr>
     53a:	60 e0       	ldi	r22, 0x00	; 0
     53c:	80 e0       	ldi	r24, 0x00	; 0
     53e:	0e 94 3f 01 	call	0x27e	; 0x27e <lcd_gotoxy>
     542:	89 e1       	ldi	r24, 0x19	; 25
     544:	91 e0       	ldi	r25, 0x01	; 1
     546:	0e 94 79 01 	call	0x2f2	; 0x2f2 <lcd_puts>
     54a:	08 95       	ret
     54c:	04 97       	sbiw	r24, 0x04	; 4
     54e:	51 f4       	brne	.+20     	; 0x564 <change_mode+0x6c>
     550:	0e 94 55 01 	call	0x2aa	; 0x2aa <lcd_clrscr>
     554:	60 e0       	ldi	r22, 0x00	; 0
     556:	80 e0       	ldi	r24, 0x00	; 0
     558:	0e 94 3f 01 	call	0x27e	; 0x27e <lcd_gotoxy>
     55c:	89 e2       	ldi	r24, 0x29	; 41
     55e:	91 e0       	ldi	r25, 0x01	; 1
     560:	0e 94 79 01 	call	0x2f2	; 0x2f2 <lcd_puts>
     564:	08 95       	ret

00000566 <uart_init>:
     566:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     56a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     56e:	e1 ec       	ldi	r30, 0xC1	; 193
     570:	f0 e0       	ldi	r31, 0x00	; 0
     572:	88 e0       	ldi	r24, 0x08	; 8
     574:	80 83       	st	Z, r24
     576:	80 81       	ld	r24, Z
     578:	80 69       	ori	r24, 0x90	; 144
     57a:	80 83       	st	Z, r24
     57c:	8e e0       	ldi	r24, 0x0E	; 14
     57e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
     582:	08 95       	ret

00000584 <uart_transmit>:
     584:	e0 ec       	ldi	r30, 0xC0	; 192
     586:	f0 e0       	ldi	r31, 0x00	; 0
     588:	90 81       	ld	r25, Z
     58a:	95 ff       	sbrs	r25, 5
     58c:	fd cf       	rjmp	.-6      	; 0x588 <uart_transmit+0x4>
     58e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     592:	08 95       	ret

00000594 <uart_newline>:
     594:	8a e0       	ldi	r24, 0x0A	; 10
     596:	0e 94 c2 02 	call	0x584	; 0x584 <uart_transmit>
     59a:	8d e0       	ldi	r24, 0x0D	; 13
     59c:	0e 94 c2 02 	call	0x584	; 0x584 <uart_transmit>
     5a0:	08 95       	ret

000005a2 <uart_receive>:
     5a2:	e0 ec       	ldi	r30, 0xC0	; 192
     5a4:	f0 e0       	ldi	r31, 0x00	; 0
     5a6:	80 81       	ld	r24, Z
     5a8:	88 23       	and	r24, r24
     5aa:	ec f7       	brge	.-6      	; 0x5a6 <uart_receive+0x4>
     5ac:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     5b0:	08 95       	ret

000005b2 <__vector_18>:
     5b2:	1f 92       	push	r1
     5b4:	0f 92       	push	r0
     5b6:	0f b6       	in	r0, 0x3f	; 63
     5b8:	0f 92       	push	r0
     5ba:	11 24       	eor	r1, r1
     5bc:	2f 93       	push	r18
     5be:	3f 93       	push	r19
     5c0:	4f 93       	push	r20
     5c2:	5f 93       	push	r21
     5c4:	6f 93       	push	r22
     5c6:	7f 93       	push	r23
     5c8:	8f 93       	push	r24
     5ca:	9f 93       	push	r25
     5cc:	af 93       	push	r26
     5ce:	bf 93       	push	r27
     5d0:	ef 93       	push	r30
     5d2:	ff 93       	push	r31
     5d4:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <uart_receive>
     5d8:	0e 94 c2 02 	call	0x584	; 0x584 <uart_transmit>
     5dc:	ff 91       	pop	r31
     5de:	ef 91       	pop	r30
     5e0:	bf 91       	pop	r27
     5e2:	af 91       	pop	r26
     5e4:	9f 91       	pop	r25
     5e6:	8f 91       	pop	r24
     5e8:	7f 91       	pop	r23
     5ea:	6f 91       	pop	r22
     5ec:	5f 91       	pop	r21
     5ee:	4f 91       	pop	r20
     5f0:	3f 91       	pop	r19
     5f2:	2f 91       	pop	r18
     5f4:	0f 90       	pop	r0
     5f6:	0f be       	out	0x3f, r0	; 63
     5f8:	0f 90       	pop	r0
     5fa:	1f 90       	pop	r1
     5fc:	18 95       	reti

000005fe <ads1115_write>:
     5fe:	1f 93       	push	r17
     600:	cf 93       	push	r28
     602:	df 93       	push	r29
     604:	16 2f       	mov	r17, r22
     606:	ea 01       	movw	r28, r20
     608:	88 0f       	add	r24, r24
     60a:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <i2c_start_wait>
     60e:	81 2f       	mov	r24, r17
     610:	0e 94 24 02 	call	0x448	; 0x448 <i2c_write>
     614:	8d 2f       	mov	r24, r29
     616:	0e 94 24 02 	call	0x448	; 0x448 <i2c_write>
     61a:	81 e0       	ldi	r24, 0x01	; 1
     61c:	cd 2b       	or	r28, r29
     61e:	09 f4       	brne	.+2      	; 0x622 <ads1115_write+0x24>
     620:	80 e0       	ldi	r24, 0x00	; 0
     622:	0e 94 24 02 	call	0x448	; 0x448 <i2c_write>
     626:	0e 94 1b 02 	call	0x436	; 0x436 <i2c_stop>
     62a:	df 91       	pop	r29
     62c:	cf 91       	pop	r28
     62e:	1f 91       	pop	r17
     630:	08 95       	ret

00000632 <ads1115_read>:
     632:	cf 93       	push	r28
     634:	df 93       	push	r29
     636:	d6 2f       	mov	r29, r22
     638:	c8 2f       	mov	r28, r24
     63a:	cc 0f       	add	r28, r28
     63c:	8c 2f       	mov	r24, r28
     63e:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <i2c_start_wait>
     642:	8d 2f       	mov	r24, r29
     644:	0e 94 24 02 	call	0x448	; 0x448 <i2c_write>
     648:	0e 94 1b 02 	call	0x436	; 0x436 <i2c_stop>
     64c:	81 e0       	ldi	r24, 0x01	; 1
     64e:	8c 0f       	add	r24, r28
     650:	0e 94 18 02 	call	0x430	; 0x430 <i2c_rep_start>
     654:	0e 94 36 02 	call	0x46c	; 0x46c <i2c_readAck>
     658:	d8 2f       	mov	r29, r24
     65a:	0e 94 41 02 	call	0x482	; 0x482 <i2c_readNak>
     65e:	c8 2f       	mov	r28, r24
     660:	0e 94 1b 02 	call	0x436	; 0x436 <i2c_stop>
     664:	8c 2f       	mov	r24, r28
     666:	90 e0       	ldi	r25, 0x00	; 0
     668:	9d 2b       	or	r25, r29
     66a:	df 91       	pop	r29
     66c:	cf 91       	pop	r28
     66e:	08 95       	ret

00000670 <ads1115_read_DIFF_A2_A3>:
int16_t ads1115_read_DIFF_A2_A3(uint8_t addr, uint16_t configReg) {
     670:	cf 93       	push	r28
     672:	c8 2f       	mov	r28, r24
     674:	ab 01       	movw	r20, r22
	/* 
	 * Read from channel 2 and 3 in diff mode
	 */
	ads1115_write(addr, ADS1115_REG_CONFIG, configReg);
     676:	61 e0       	ldi	r22, 0x01	; 1
     678:	0e 94 ff 02 	call	0x5fe	; 0x5fe <ads1115_write>
	//_delay_ms(8);
	return (int16_t)ads1115_read(addr, ADS1115_REG_CONVERSION);
     67c:	60 e0       	ldi	r22, 0x00	; 0
     67e:	8c 2f       	mov	r24, r28
     680:	0e 94 19 03 	call	0x632	; 0x632 <ads1115_read>
	
}
     684:	cf 91       	pop	r28
     686:	08 95       	ret

00000688 <main>:
				lcd_puts("MODE:Continuity");
			}
	}

int main(void)
{	
     688:	cf 93       	push	r28
     68a:	df 93       	push	r29
     68c:	cd b7       	in	r28, 0x3d	; 61
     68e:	de b7       	in	r29, 0x3e	; 62
     690:	68 97       	sbiw	r28, 0x18	; 24
     692:	0f b6       	in	r0, 0x3f	; 63
     694:	f8 94       	cli
     696:	de bf       	out	0x3e, r29	; 62
     698:	0f be       	out	0x3f, r0	; 63
     69a:	cd bf       	out	0x3d, r28	; 61
	lcd_init(LCD_DISP_ON_CURSOR);
     69c:	8e e0       	ldi	r24, 0x0E	; 14
     69e:	0e 94 89 01 	call	0x312	; 0x312 <lcd_init>
	/* set bits 6 as outputs*/
	DDRD = (1<<PORTD6);
     6a2:	80 e4       	ldi	r24, 0x40	; 64
     6a4:	8a b9       	out	0x0a, r24	; 10
	
	/* set port B as output*/
	 DDRC &= 0xF9;
     6a6:	87 b1       	in	r24, 0x07	; 7
     6a8:	89 7f       	andi	r24, 0xF9	; 249
     6aa:	87 b9       	out	0x07, r24	; 7
	
	/* relevant bitshift to activate pullup resistor*/
	PORTC = (1 << PORTC0) | (1 << PORTC1) | (1 << PORTC2); 
     6ac:	87 e0       	ldi	r24, 0x07	; 7
     6ae:	88 b9       	out	0x08, r24	; 8

	/*clear the LCD screen*/
	lcd_clrscr();
     6b0:	0e 94 55 01 	call	0x2aa	; 0x2aa <lcd_clrscr>
	/*create the bar and relevant messages*/    
	 int current_level = 4;
	 int current_mode = 1;
	
	/* set output compare values*/
	OCR0A = 0;
     6b4:	17 bc       	out	0x27, r1	; 39
	change_mode(current_mode);
     6b6:	81 e0       	ldi	r24, 0x01	; 1
     6b8:	90 e0       	ldi	r25, 0x00	; 0
     6ba:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <change_mode>
	change_brightness(current_level);
     6be:	84 e0       	ldi	r24, 0x04	; 4
     6c0:	90 e0       	ldi	r25, 0x00	; 0
     6c2:	0e 94 4c 02 	call	0x498	; 0x498 <change_brightness>
	
	/* set up timer/counter 0 for past PWM, set on compare match */
	TCCR0A = (1<<COM0A0)|(1<<COM0A1)|(1<<WGM01)|(1<<WGM00);
     6c6:	83 ec       	ldi	r24, 0xC3	; 195
     6c8:	84 bd       	out	0x24, r24	; 36
	TCCR0B = (1 << CS00);
     6ca:	81 e0       	ldi	r24, 0x01	; 1
     6cc:	85 bd       	out	0x25, r24	; 37
/*UART I2C INIT*/
	//uint8_t UBBRValue = FCPU/(16*BAUD)-1;
	uint8_t UBBRValue = 49;
	uart_init(UBBRValue);
     6ce:	81 e3       	ldi	r24, 0x31	; 49
     6d0:	0e 94 b3 02 	call	0x566	; 0x566 <uart_init>
	i2c_init();
     6d4:	0e 94 c3 01 	call	0x386	; 0x386 <i2c_init>
	
	int16_t dataBinary;
	float dataVoltage;
	char buff[16];
	char voltageString[8];
	sei();
     6d8:	78 94       	sei
	/*clear the LCD screen*/
	lcd_clrscr();

	/*create the bar and relevant messages*/    
	 int current_level = 4;
	 int current_mode = 1;
     6da:	88 24       	eor	r8, r8
     6dc:	83 94       	inc	r8
     6de:	91 2c       	mov	r9, r1

	/*clear the LCD screen*/
	lcd_clrscr();

	/*create the bar and relevant messages*/    
	 int current_level = 4;
     6e0:	68 94       	set
     6e2:	cc 24       	eor	r12, r12
     6e4:	c2 f8       	bld	r12, 2
     6e6:	d1 2c       	mov	r13, r1
		/* if the pin is low decrease the brightness */
		if((PINC & (1 << PINC0)) == 0){
			_delay_ms(250);
			if (current_level - 1 <= 0 && OCR0A + 63 > 251){
				current_level = 0;
				OCR0A = 255;
     6e8:	55 24       	eor	r5, r5
     6ea:	5a 94       	dec	r5
						
				/**************************************************************/
				/*					DC VOLTAGE								  */
				
				dataBinary = ads1115_read_DIFF_A2_A3(ADS1115_ADDR, ads1115Config);
				sprintf(buff, "%d", dataBinary);
     6ec:	0f 2e       	mov	r0, r31
     6ee:	f9 e3       	ldi	r31, 0x39	; 57
     6f0:	af 2e       	mov	r10, r31
     6f2:	f1 e0       	ldi	r31, 0x01	; 1
     6f4:	bf 2e       	mov	r11, r31
     6f6:	f0 2d       	mov	r31, r0
     6f8:	ce 01       	movw	r24, r28
     6fa:	01 96       	adiw	r24, 0x01	; 1
     6fc:	3c 01       	movw	r6, r24
     6fe:	7e 01       	movw	r14, r28
     700:	99 e1       	ldi	r25, 0x19	; 25
     702:	e9 0e       	add	r14, r25
     704:	f1 1c       	adc	r15, r1
    /* Replace with your application code */
    while (1) 
    {
		
		/* if the pin is low decrease the brightness */
		if((PINC & (1 << PINC0)) == 0){
     706:	30 99       	sbic	0x06, 0	; 6
     708:	1c c0       	rjmp	.+56     	; 0x742 <main+0xba>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     70a:	e3 e2       	ldi	r30, 0x23	; 35
     70c:	f4 ef       	ldi	r31, 0xF4	; 244
     70e:	31 97       	sbiw	r30, 0x01	; 1
     710:	f1 f7       	brne	.-4      	; 0x70e <main+0x86>
     712:	00 c0       	rjmp	.+0      	; 0x714 <main+0x8c>
     714:	00 00       	nop
			_delay_ms(250);
			if (current_level - 1 <= 0 && OCR0A + 63 > 251){
     716:	f1 e0       	ldi	r31, 0x01	; 1
     718:	cf 1a       	sub	r12, r31
     71a:	d1 08       	sbc	r13, r1
     71c:	1c 14       	cp	r1, r12
     71e:	1d 04       	cpc	r1, r13
     720:	54 f0       	brlt	.+20     	; 0x736 <main+0xae>
     722:	87 b5       	in	r24, 0x27	; 39
     724:	90 e0       	ldi	r25, 0x00	; 0
     726:	cf 96       	adiw	r24, 0x3f	; 63
     728:	8c 3f       	cpi	r24, 0xFC	; 252
     72a:	91 05       	cpc	r25, r1
     72c:	24 f0       	brlt	.+8      	; 0x736 <main+0xae>
				current_level = 0;
				OCR0A = 255;
     72e:	57 bc       	out	0x27, r5	; 39
		
		/* if the pin is low decrease the brightness */
		if((PINC & (1 << PINC0)) == 0){
			_delay_ms(250);
			if (current_level - 1 <= 0 && OCR0A + 63 > 251){
				current_level = 0;
     730:	c1 2c       	mov	r12, r1
     732:	d1 2c       	mov	r13, r1
				OCR0A = 255;
     734:	03 c0       	rjmp	.+6      	; 0x73c <main+0xb4>
			} else {
				current_level --;
				OCR0A = OCR0A + 63;
     736:	87 b5       	in	r24, 0x27	; 39
     738:	81 5c       	subi	r24, 0xC1	; 193
     73a:	87 bd       	out	0x27, r24	; 39
			}
			change_brightness(current_level);
     73c:	c6 01       	movw	r24, r12
     73e:	0e 94 4c 02 	call	0x498	; 0x498 <change_brightness>
		}
			
			
		/* if the pin is high increase the brightness */
		if((PINC & (1 << PINC1)) == 0){
     742:	31 99       	sbic	0x06, 1	; 6
     744:	1e c0       	rjmp	.+60     	; 0x782 <main+0xfa>
     746:	83 e2       	ldi	r24, 0x23	; 35
     748:	94 ef       	ldi	r25, 0xF4	; 244
     74a:	01 97       	sbiw	r24, 0x01	; 1
     74c:	f1 f7       	brne	.-4      	; 0x74a <main+0xc2>
     74e:	00 c0       	rjmp	.+0      	; 0x750 <main+0xc8>
     750:	00 00       	nop
			_delay_ms(250);
			if(current_level + 1 >= 4 && OCR0A - 63 <= 3){
     752:	9f ef       	ldi	r25, 0xFF	; 255
     754:	c9 1a       	sub	r12, r25
     756:	d9 0a       	sbc	r13, r25
     758:	e4 e0       	ldi	r30, 0x04	; 4
     75a:	ce 16       	cp	r12, r30
     75c:	d1 04       	cpc	r13, r1
     75e:	5c f0       	brlt	.+22     	; 0x776 <main+0xee>
     760:	87 b5       	in	r24, 0x27	; 39
     762:	90 e0       	ldi	r25, 0x00	; 0
     764:	cf 97       	sbiw	r24, 0x3f	; 63
     766:	04 97       	sbiw	r24, 0x04	; 4
     768:	34 f4       	brge	.+12     	; 0x776 <main+0xee>
				current_level = 4;
				OCR0A = 0;
     76a:	17 bc       	out	0x27, r1	; 39
			
		/* if the pin is high increase the brightness */
		if((PINC & (1 << PINC1)) == 0){
			_delay_ms(250);
			if(current_level + 1 >= 4 && OCR0A - 63 <= 3){
				current_level = 4;
     76c:	68 94       	set
     76e:	cc 24       	eor	r12, r12
     770:	c2 f8       	bld	r12, 2
     772:	d1 2c       	mov	r13, r1
				OCR0A = 0;
     774:	03 c0       	rjmp	.+6      	; 0x77c <main+0xf4>
			} else {
				current_level ++;
				OCR0A = OCR0A - 63;
     776:	87 b5       	in	r24, 0x27	; 39
     778:	8f 53       	subi	r24, 0x3F	; 63
     77a:	87 bd       	out	0x27, r24	; 39
			}
			change_brightness(current_level);
     77c:	c6 01       	movw	r24, r12
     77e:	0e 94 4c 02 	call	0x498	; 0x498 <change_brightness>
		}
		
		/* if pin changes change mode*/
		if((PINC & (1<<PINC2)) == 0){
     782:	32 99       	sbic	0x06, 2	; 6
     784:	2a c0       	rjmp	.+84     	; 0x7da <main+0x152>
     786:	83 e2       	ldi	r24, 0x23	; 35
     788:	94 ef       	ldi	r25, 0xF4	; 244
     78a:	01 97       	sbiw	r24, 0x01	; 1
     78c:	f1 f7       	brne	.-4      	; 0x78a <main+0x102>
     78e:	00 c0       	rjmp	.+0      	; 0x790 <main+0x108>
     790:	00 00       	nop
			_delay_ms(250);
			if(current_mode + 1 <= 4){
     792:	9f ef       	ldi	r25, 0xFF	; 255
     794:	89 1a       	sub	r8, r25
     796:	99 0a       	sbc	r9, r25
     798:	e5 e0       	ldi	r30, 0x05	; 5
     79a:	8e 16       	cp	r8, r30
     79c:	91 04       	cpc	r9, r1
     79e:	1c f0       	brlt	.+6      	; 0x7a6 <main+0x11e>
				current_mode++;
			} else {
				current_mode = 1;
     7a0:	88 24       	eor	r8, r8
     7a2:	83 94       	inc	r8
     7a4:	91 2c       	mov	r9, r1
			}
			change_mode(current_mode);
     7a6:	c4 01       	movw	r24, r8
     7a8:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <change_mode>
			change_brightness(current_level);
     7ac:	c6 01       	movw	r24, r12
     7ae:	0e 94 4c 02 	call	0x498	; 0x498 <change_brightness>
     7b2:	13 c0       	rjmp	.+38     	; 0x7da <main+0x152>
				sprintf(buff, "%d", dataBinary);
				
				dataVoltage = (dataBinary-32)/1006.4;
				dtostrf(dataVoltage, 4, 3, voltageString);
				for (int i = 0; i < sizeof(voltageString); i++) {
					uart_transmit(voltageString[i]);
     7b4:	f8 01       	movw	r30, r16
     7b6:	81 91       	ld	r24, Z+
     7b8:	8f 01       	movw	r16, r30
     7ba:	0e 94 c2 02 	call	0x584	; 0x584 <uart_transmit>
				dataBinary = ads1115_read_DIFF_A2_A3(ADS1115_ADDR, ads1115Config);
				sprintf(buff, "%d", dataBinary);
				
				dataVoltage = (dataBinary-32)/1006.4;
				dtostrf(dataVoltage, 4, 3, voltageString);
				for (int i = 0; i < sizeof(voltageString); i++) {
     7be:	e0 16       	cp	r14, r16
     7c0:	f1 06       	cpc	r15, r17
     7c2:	c1 f7       	brne	.-16     	; 0x7b4 <main+0x12c>
					uart_transmit(voltageString[i]);
				}
				uart_newline();
     7c4:	0e 94 ca 02 	call	0x594	; 0x594 <uart_newline>
				lcd_gotoxy(0,1);
     7c8:	61 e0       	ldi	r22, 0x01	; 1
     7ca:	80 e0       	ldi	r24, 0x00	; 0
     7cc:	0e 94 3f 01 	call	0x27e	; 0x27e <lcd_gotoxy>
				lcd_puts(voltageString);
     7d0:	ce 01       	movw	r24, r28
     7d2:	41 96       	adiw	r24, 0x11	; 17
     7d4:	0e 94 79 01 	call	0x2f2	; 0x2f2 <lcd_puts>
		
			
	}
     7d8:	96 cf       	rjmp	.-212    	; 0x706 <main+0x7e>
		
						
				/**************************************************************/
				/*					DC VOLTAGE								  */
				
				dataBinary = ads1115_read_DIFF_A2_A3(ADS1115_ADDR, ads1115Config);
     7da:	63 ee       	ldi	r22, 0xE3	; 227
     7dc:	75 eb       	ldi	r23, 0xB5	; 181
     7de:	88 e4       	ldi	r24, 0x48	; 72
     7e0:	0e 94 38 03 	call	0x670	; 0x670 <ads1115_read_DIFF_A2_A3>
     7e4:	8c 01       	movw	r16, r24
				sprintf(buff, "%d", dataBinary);
     7e6:	1f 93       	push	r17
     7e8:	8f 93       	push	r24
     7ea:	bf 92       	push	r11
     7ec:	af 92       	push	r10
     7ee:	7f 92       	push	r7
     7f0:	6f 92       	push	r6
     7f2:	0e 94 3a 05 	call	0xa74	; 0xa74 <sprintf>
				
				dataVoltage = (dataBinary-32)/1006.4;
				dtostrf(dataVoltage, 4, 3, voltageString);
     7f6:	b8 01       	movw	r22, r16
     7f8:	60 52       	subi	r22, 0x20	; 32
     7fa:	71 09       	sbc	r23, r1
     7fc:	07 2e       	mov	r0, r23
     7fe:	00 0c       	add	r0, r0
     800:	88 0b       	sbc	r24, r24
     802:	99 0b       	sbc	r25, r25
     804:	0e 94 8e 04 	call	0x91c	; 0x91c <__floatsisf>
     808:	2a e9       	ldi	r18, 0x9A	; 154
     80a:	39 e9       	ldi	r19, 0x99	; 153
     80c:	4b e7       	ldi	r20, 0x7B	; 123
     80e:	54 e4       	ldi	r21, 0x44	; 68
     810:	0e 94 1a 04 	call	0x834	; 0x834 <__divsf3>
     814:	8e 01       	movw	r16, r28
     816:	0f 5e       	subi	r16, 0xEF	; 239
     818:	1f 4f       	sbci	r17, 0xFF	; 255
     81a:	23 e0       	ldi	r18, 0x03	; 3
     81c:	30 e0       	ldi	r19, 0x00	; 0
     81e:	44 e0       	ldi	r20, 0x04	; 4
     820:	50 e0       	ldi	r21, 0x00	; 0
     822:	0e 94 1a 05 	call	0xa34	; 0xa34 <dtostrf>
     826:	0f 90       	pop	r0
     828:	0f 90       	pop	r0
     82a:	0f 90       	pop	r0
     82c:	0f 90       	pop	r0
     82e:	0f 90       	pop	r0
     830:	0f 90       	pop	r0
     832:	c0 cf       	rjmp	.-128    	; 0x7b4 <main+0x12c>

00000834 <__divsf3>:
     834:	0e 94 2e 04 	call	0x85c	; 0x85c <__divsf3x>
     838:	0c 94 e0 04 	jmp	0x9c0	; 0x9c0 <__fp_round>
     83c:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <__fp_pscB>
     840:	58 f0       	brcs	.+22     	; 0x858 <__divsf3+0x24>
     842:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__fp_pscA>
     846:	40 f0       	brcs	.+16     	; 0x858 <__divsf3+0x24>
     848:	29 f4       	brne	.+10     	; 0x854 <__divsf3+0x20>
     84a:	5f 3f       	cpi	r21, 0xFF	; 255
     84c:	29 f0       	breq	.+10     	; 0x858 <__divsf3+0x24>
     84e:	0c 94 c9 04 	jmp	0x992	; 0x992 <__fp_inf>
     852:	51 11       	cpse	r21, r1
     854:	0c 94 14 05 	jmp	0xa28	; 0xa28 <__fp_szero>
     858:	0c 94 cf 04 	jmp	0x99e	; 0x99e <__fp_nan>

0000085c <__divsf3x>:
     85c:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <__fp_split3>
     860:	68 f3       	brcs	.-38     	; 0x83c <__divsf3+0x8>

00000862 <__divsf3_pse>:
     862:	99 23       	and	r25, r25
     864:	b1 f3       	breq	.-20     	; 0x852 <__divsf3+0x1e>
     866:	55 23       	and	r21, r21
     868:	91 f3       	breq	.-28     	; 0x84e <__divsf3+0x1a>
     86a:	95 1b       	sub	r25, r21
     86c:	55 0b       	sbc	r21, r21
     86e:	bb 27       	eor	r27, r27
     870:	aa 27       	eor	r26, r26
     872:	62 17       	cp	r22, r18
     874:	73 07       	cpc	r23, r19
     876:	84 07       	cpc	r24, r20
     878:	38 f0       	brcs	.+14     	; 0x888 <__divsf3_pse+0x26>
     87a:	9f 5f       	subi	r25, 0xFF	; 255
     87c:	5f 4f       	sbci	r21, 0xFF	; 255
     87e:	22 0f       	add	r18, r18
     880:	33 1f       	adc	r19, r19
     882:	44 1f       	adc	r20, r20
     884:	aa 1f       	adc	r26, r26
     886:	a9 f3       	breq	.-22     	; 0x872 <__divsf3_pse+0x10>
     888:	35 d0       	rcall	.+106    	; 0x8f4 <__divsf3_pse+0x92>
     88a:	0e 2e       	mov	r0, r30
     88c:	3a f0       	brmi	.+14     	; 0x89c <__divsf3_pse+0x3a>
     88e:	e0 e8       	ldi	r30, 0x80	; 128
     890:	32 d0       	rcall	.+100    	; 0x8f6 <__divsf3_pse+0x94>
     892:	91 50       	subi	r25, 0x01	; 1
     894:	50 40       	sbci	r21, 0x00	; 0
     896:	e6 95       	lsr	r30
     898:	00 1c       	adc	r0, r0
     89a:	ca f7       	brpl	.-14     	; 0x88e <__divsf3_pse+0x2c>
     89c:	2b d0       	rcall	.+86     	; 0x8f4 <__divsf3_pse+0x92>
     89e:	fe 2f       	mov	r31, r30
     8a0:	29 d0       	rcall	.+82     	; 0x8f4 <__divsf3_pse+0x92>
     8a2:	66 0f       	add	r22, r22
     8a4:	77 1f       	adc	r23, r23
     8a6:	88 1f       	adc	r24, r24
     8a8:	bb 1f       	adc	r27, r27
     8aa:	26 17       	cp	r18, r22
     8ac:	37 07       	cpc	r19, r23
     8ae:	48 07       	cpc	r20, r24
     8b0:	ab 07       	cpc	r26, r27
     8b2:	b0 e8       	ldi	r27, 0x80	; 128
     8b4:	09 f0       	breq	.+2      	; 0x8b8 <__divsf3_pse+0x56>
     8b6:	bb 0b       	sbc	r27, r27
     8b8:	80 2d       	mov	r24, r0
     8ba:	bf 01       	movw	r22, r30
     8bc:	ff 27       	eor	r31, r31
     8be:	93 58       	subi	r25, 0x83	; 131
     8c0:	5f 4f       	sbci	r21, 0xFF	; 255
     8c2:	3a f0       	brmi	.+14     	; 0x8d2 <__divsf3_pse+0x70>
     8c4:	9e 3f       	cpi	r25, 0xFE	; 254
     8c6:	51 05       	cpc	r21, r1
     8c8:	78 f0       	brcs	.+30     	; 0x8e8 <__divsf3_pse+0x86>
     8ca:	0c 94 c9 04 	jmp	0x992	; 0x992 <__fp_inf>
     8ce:	0c 94 14 05 	jmp	0xa28	; 0xa28 <__fp_szero>
     8d2:	5f 3f       	cpi	r21, 0xFF	; 255
     8d4:	e4 f3       	brlt	.-8      	; 0x8ce <__divsf3_pse+0x6c>
     8d6:	98 3e       	cpi	r25, 0xE8	; 232
     8d8:	d4 f3       	brlt	.-12     	; 0x8ce <__divsf3_pse+0x6c>
     8da:	86 95       	lsr	r24
     8dc:	77 95       	ror	r23
     8de:	67 95       	ror	r22
     8e0:	b7 95       	ror	r27
     8e2:	f7 95       	ror	r31
     8e4:	9f 5f       	subi	r25, 0xFF	; 255
     8e6:	c9 f7       	brne	.-14     	; 0x8da <__divsf3_pse+0x78>
     8e8:	88 0f       	add	r24, r24
     8ea:	91 1d       	adc	r25, r1
     8ec:	96 95       	lsr	r25
     8ee:	87 95       	ror	r24
     8f0:	97 f9       	bld	r25, 7
     8f2:	08 95       	ret
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	66 0f       	add	r22, r22
     8f8:	77 1f       	adc	r23, r23
     8fa:	88 1f       	adc	r24, r24
     8fc:	bb 1f       	adc	r27, r27
     8fe:	62 17       	cp	r22, r18
     900:	73 07       	cpc	r23, r19
     902:	84 07       	cpc	r24, r20
     904:	ba 07       	cpc	r27, r26
     906:	20 f0       	brcs	.+8      	; 0x910 <__stack+0x11>
     908:	62 1b       	sub	r22, r18
     90a:	73 0b       	sbc	r23, r19
     90c:	84 0b       	sbc	r24, r20
     90e:	ba 0b       	sbc	r27, r26
     910:	ee 1f       	adc	r30, r30
     912:	88 f7       	brcc	.-30     	; 0x8f6 <__divsf3_pse+0x94>
     914:	e0 95       	com	r30
     916:	08 95       	ret

00000918 <__floatunsisf>:
     918:	e8 94       	clt
     91a:	09 c0       	rjmp	.+18     	; 0x92e <__floatsisf+0x12>

0000091c <__floatsisf>:
     91c:	97 fb       	bst	r25, 7
     91e:	3e f4       	brtc	.+14     	; 0x92e <__floatsisf+0x12>
     920:	90 95       	com	r25
     922:	80 95       	com	r24
     924:	70 95       	com	r23
     926:	61 95       	neg	r22
     928:	7f 4f       	sbci	r23, 0xFF	; 255
     92a:	8f 4f       	sbci	r24, 0xFF	; 255
     92c:	9f 4f       	sbci	r25, 0xFF	; 255
     92e:	99 23       	and	r25, r25
     930:	a9 f0       	breq	.+42     	; 0x95c <__floatsisf+0x40>
     932:	f9 2f       	mov	r31, r25
     934:	96 e9       	ldi	r25, 0x96	; 150
     936:	bb 27       	eor	r27, r27
     938:	93 95       	inc	r25
     93a:	f6 95       	lsr	r31
     93c:	87 95       	ror	r24
     93e:	77 95       	ror	r23
     940:	67 95       	ror	r22
     942:	b7 95       	ror	r27
     944:	f1 11       	cpse	r31, r1
     946:	f8 cf       	rjmp	.-16     	; 0x938 <__floatsisf+0x1c>
     948:	fa f4       	brpl	.+62     	; 0x988 <__floatsisf+0x6c>
     94a:	bb 0f       	add	r27, r27
     94c:	11 f4       	brne	.+4      	; 0x952 <__floatsisf+0x36>
     94e:	60 ff       	sbrs	r22, 0
     950:	1b c0       	rjmp	.+54     	; 0x988 <__floatsisf+0x6c>
     952:	6f 5f       	subi	r22, 0xFF	; 255
     954:	7f 4f       	sbci	r23, 0xFF	; 255
     956:	8f 4f       	sbci	r24, 0xFF	; 255
     958:	9f 4f       	sbci	r25, 0xFF	; 255
     95a:	16 c0       	rjmp	.+44     	; 0x988 <__floatsisf+0x6c>
     95c:	88 23       	and	r24, r24
     95e:	11 f0       	breq	.+4      	; 0x964 <__floatsisf+0x48>
     960:	96 e9       	ldi	r25, 0x96	; 150
     962:	11 c0       	rjmp	.+34     	; 0x986 <__floatsisf+0x6a>
     964:	77 23       	and	r23, r23
     966:	21 f0       	breq	.+8      	; 0x970 <__floatsisf+0x54>
     968:	9e e8       	ldi	r25, 0x8E	; 142
     96a:	87 2f       	mov	r24, r23
     96c:	76 2f       	mov	r23, r22
     96e:	05 c0       	rjmp	.+10     	; 0x97a <__floatsisf+0x5e>
     970:	66 23       	and	r22, r22
     972:	71 f0       	breq	.+28     	; 0x990 <__floatsisf+0x74>
     974:	96 e8       	ldi	r25, 0x86	; 134
     976:	86 2f       	mov	r24, r22
     978:	70 e0       	ldi	r23, 0x00	; 0
     97a:	60 e0       	ldi	r22, 0x00	; 0
     97c:	2a f0       	brmi	.+10     	; 0x988 <__floatsisf+0x6c>
     97e:	9a 95       	dec	r25
     980:	66 0f       	add	r22, r22
     982:	77 1f       	adc	r23, r23
     984:	88 1f       	adc	r24, r24
     986:	da f7       	brpl	.-10     	; 0x97e <__floatsisf+0x62>
     988:	88 0f       	add	r24, r24
     98a:	96 95       	lsr	r25
     98c:	87 95       	ror	r24
     98e:	97 f9       	bld	r25, 7
     990:	08 95       	ret

00000992 <__fp_inf>:
     992:	97 f9       	bld	r25, 7
     994:	9f 67       	ori	r25, 0x7F	; 127
     996:	80 e8       	ldi	r24, 0x80	; 128
     998:	70 e0       	ldi	r23, 0x00	; 0
     99a:	60 e0       	ldi	r22, 0x00	; 0
     99c:	08 95       	ret

0000099e <__fp_nan>:
     99e:	9f ef       	ldi	r25, 0xFF	; 255
     9a0:	80 ec       	ldi	r24, 0xC0	; 192
     9a2:	08 95       	ret

000009a4 <__fp_pscA>:
     9a4:	00 24       	eor	r0, r0
     9a6:	0a 94       	dec	r0
     9a8:	16 16       	cp	r1, r22
     9aa:	17 06       	cpc	r1, r23
     9ac:	18 06       	cpc	r1, r24
     9ae:	09 06       	cpc	r0, r25
     9b0:	08 95       	ret

000009b2 <__fp_pscB>:
     9b2:	00 24       	eor	r0, r0
     9b4:	0a 94       	dec	r0
     9b6:	12 16       	cp	r1, r18
     9b8:	13 06       	cpc	r1, r19
     9ba:	14 06       	cpc	r1, r20
     9bc:	05 06       	cpc	r0, r21
     9be:	08 95       	ret

000009c0 <__fp_round>:
     9c0:	09 2e       	mov	r0, r25
     9c2:	03 94       	inc	r0
     9c4:	00 0c       	add	r0, r0
     9c6:	11 f4       	brne	.+4      	; 0x9cc <__fp_round+0xc>
     9c8:	88 23       	and	r24, r24
     9ca:	52 f0       	brmi	.+20     	; 0x9e0 <__fp_round+0x20>
     9cc:	bb 0f       	add	r27, r27
     9ce:	40 f4       	brcc	.+16     	; 0x9e0 <__fp_round+0x20>
     9d0:	bf 2b       	or	r27, r31
     9d2:	11 f4       	brne	.+4      	; 0x9d8 <__fp_round+0x18>
     9d4:	60 ff       	sbrs	r22, 0
     9d6:	04 c0       	rjmp	.+8      	; 0x9e0 <__fp_round+0x20>
     9d8:	6f 5f       	subi	r22, 0xFF	; 255
     9da:	7f 4f       	sbci	r23, 0xFF	; 255
     9dc:	8f 4f       	sbci	r24, 0xFF	; 255
     9de:	9f 4f       	sbci	r25, 0xFF	; 255
     9e0:	08 95       	ret

000009e2 <__fp_split3>:
     9e2:	57 fd       	sbrc	r21, 7
     9e4:	90 58       	subi	r25, 0x80	; 128
     9e6:	44 0f       	add	r20, r20
     9e8:	55 1f       	adc	r21, r21
     9ea:	59 f0       	breq	.+22     	; 0xa02 <__fp_splitA+0x10>
     9ec:	5f 3f       	cpi	r21, 0xFF	; 255
     9ee:	71 f0       	breq	.+28     	; 0xa0c <__fp_splitA+0x1a>
     9f0:	47 95       	ror	r20

000009f2 <__fp_splitA>:
     9f2:	88 0f       	add	r24, r24
     9f4:	97 fb       	bst	r25, 7
     9f6:	99 1f       	adc	r25, r25
     9f8:	61 f0       	breq	.+24     	; 0xa12 <__fp_splitA+0x20>
     9fa:	9f 3f       	cpi	r25, 0xFF	; 255
     9fc:	79 f0       	breq	.+30     	; 0xa1c <__fp_splitA+0x2a>
     9fe:	87 95       	ror	r24
     a00:	08 95       	ret
     a02:	12 16       	cp	r1, r18
     a04:	13 06       	cpc	r1, r19
     a06:	14 06       	cpc	r1, r20
     a08:	55 1f       	adc	r21, r21
     a0a:	f2 cf       	rjmp	.-28     	; 0x9f0 <__fp_split3+0xe>
     a0c:	46 95       	lsr	r20
     a0e:	f1 df       	rcall	.-30     	; 0x9f2 <__fp_splitA>
     a10:	08 c0       	rjmp	.+16     	; 0xa22 <__fp_splitA+0x30>
     a12:	16 16       	cp	r1, r22
     a14:	17 06       	cpc	r1, r23
     a16:	18 06       	cpc	r1, r24
     a18:	99 1f       	adc	r25, r25
     a1a:	f1 cf       	rjmp	.-30     	; 0x9fe <__fp_splitA+0xc>
     a1c:	86 95       	lsr	r24
     a1e:	71 05       	cpc	r23, r1
     a20:	61 05       	cpc	r22, r1
     a22:	08 94       	sec
     a24:	08 95       	ret

00000a26 <__fp_zero>:
     a26:	e8 94       	clt

00000a28 <__fp_szero>:
     a28:	bb 27       	eor	r27, r27
     a2a:	66 27       	eor	r22, r22
     a2c:	77 27       	eor	r23, r23
     a2e:	cb 01       	movw	r24, r22
     a30:	97 f9       	bld	r25, 7
     a32:	08 95       	ret

00000a34 <dtostrf>:
     a34:	ef 92       	push	r14
     a36:	0f 93       	push	r16
     a38:	1f 93       	push	r17
     a3a:	cf 93       	push	r28
     a3c:	df 93       	push	r29
     a3e:	e8 01       	movw	r28, r16
     a40:	47 fd       	sbrc	r20, 7
     a42:	02 c0       	rjmp	.+4      	; 0xa48 <dtostrf+0x14>
     a44:	34 e0       	ldi	r19, 0x04	; 4
     a46:	01 c0       	rjmp	.+2      	; 0xa4a <dtostrf+0x16>
     a48:	34 e1       	ldi	r19, 0x14	; 20
     a4a:	04 2e       	mov	r0, r20
     a4c:	00 0c       	add	r0, r0
     a4e:	55 0b       	sbc	r21, r21
     a50:	57 ff       	sbrs	r21, 7
     a52:	03 c0       	rjmp	.+6      	; 0xa5a <dtostrf+0x26>
     a54:	51 95       	neg	r21
     a56:	41 95       	neg	r20
     a58:	51 09       	sbc	r21, r1
     a5a:	e3 2e       	mov	r14, r19
     a5c:	02 2f       	mov	r16, r18
     a5e:	24 2f       	mov	r18, r20
     a60:	ae 01       	movw	r20, r28
     a62:	0e 94 3d 07 	call	0xe7a	; 0xe7a <dtoa_prf>
     a66:	ce 01       	movw	r24, r28
     a68:	df 91       	pop	r29
     a6a:	cf 91       	pop	r28
     a6c:	1f 91       	pop	r17
     a6e:	0f 91       	pop	r16
     a70:	ef 90       	pop	r14
     a72:	08 95       	ret

00000a74 <sprintf>:
     a74:	ae e0       	ldi	r26, 0x0E	; 14
     a76:	b0 e0       	ldi	r27, 0x00	; 0
     a78:	e0 e4       	ldi	r30, 0x40	; 64
     a7a:	f5 e0       	ldi	r31, 0x05	; 5
     a7c:	0c 94 2d 0a 	jmp	0x145a	; 0x145a <__prologue_saves__+0x1c>
     a80:	0d 89       	ldd	r16, Y+21	; 0x15
     a82:	1e 89       	ldd	r17, Y+22	; 0x16
     a84:	86 e0       	ldi	r24, 0x06	; 6
     a86:	8c 83       	std	Y+4, r24	; 0x04
     a88:	1a 83       	std	Y+2, r17	; 0x02
     a8a:	09 83       	std	Y+1, r16	; 0x01
     a8c:	8f ef       	ldi	r24, 0xFF	; 255
     a8e:	9f e7       	ldi	r25, 0x7F	; 127
     a90:	9e 83       	std	Y+6, r25	; 0x06
     a92:	8d 83       	std	Y+5, r24	; 0x05
     a94:	ae 01       	movw	r20, r28
     a96:	47 5e       	subi	r20, 0xE7	; 231
     a98:	5f 4f       	sbci	r21, 0xFF	; 255
     a9a:	6f 89       	ldd	r22, Y+23	; 0x17
     a9c:	78 8d       	ldd	r23, Y+24	; 0x18
     a9e:	ce 01       	movw	r24, r28
     aa0:	01 96       	adiw	r24, 0x01	; 1
     aa2:	0e 94 5c 05 	call	0xab8	; 0xab8 <vfprintf>
     aa6:	ef 81       	ldd	r30, Y+7	; 0x07
     aa8:	f8 85       	ldd	r31, Y+8	; 0x08
     aaa:	e0 0f       	add	r30, r16
     aac:	f1 1f       	adc	r31, r17
     aae:	10 82       	st	Z, r1
     ab0:	2e 96       	adiw	r28, 0x0e	; 14
     ab2:	e4 e0       	ldi	r30, 0x04	; 4
     ab4:	0c 94 49 0a 	jmp	0x1492	; 0x1492 <__epilogue_restores__+0x1c>

00000ab8 <vfprintf>:
     ab8:	ab e0       	ldi	r26, 0x0B	; 11
     aba:	b0 e0       	ldi	r27, 0x00	; 0
     abc:	e2 e6       	ldi	r30, 0x62	; 98
     abe:	f5 e0       	ldi	r31, 0x05	; 5
     ac0:	0c 94 1f 0a 	jmp	0x143e	; 0x143e <__prologue_saves__>
     ac4:	6c 01       	movw	r12, r24
     ac6:	7b 01       	movw	r14, r22
     ac8:	8a 01       	movw	r16, r20
     aca:	fc 01       	movw	r30, r24
     acc:	17 82       	std	Z+7, r1	; 0x07
     ace:	16 82       	std	Z+6, r1	; 0x06
     ad0:	83 81       	ldd	r24, Z+3	; 0x03
     ad2:	81 ff       	sbrs	r24, 1
     ad4:	cc c1       	rjmp	.+920    	; 0xe6e <vfprintf+0x3b6>
     ad6:	ce 01       	movw	r24, r28
     ad8:	01 96       	adiw	r24, 0x01	; 1
     ada:	3c 01       	movw	r6, r24
     adc:	f6 01       	movw	r30, r12
     ade:	93 81       	ldd	r25, Z+3	; 0x03
     ae0:	f7 01       	movw	r30, r14
     ae2:	93 fd       	sbrc	r25, 3
     ae4:	85 91       	lpm	r24, Z+
     ae6:	93 ff       	sbrs	r25, 3
     ae8:	81 91       	ld	r24, Z+
     aea:	7f 01       	movw	r14, r30
     aec:	88 23       	and	r24, r24
     aee:	09 f4       	brne	.+2      	; 0xaf2 <vfprintf+0x3a>
     af0:	ba c1       	rjmp	.+884    	; 0xe66 <vfprintf+0x3ae>
     af2:	85 32       	cpi	r24, 0x25	; 37
     af4:	39 f4       	brne	.+14     	; 0xb04 <vfprintf+0x4c>
     af6:	93 fd       	sbrc	r25, 3
     af8:	85 91       	lpm	r24, Z+
     afa:	93 ff       	sbrs	r25, 3
     afc:	81 91       	ld	r24, Z+
     afe:	7f 01       	movw	r14, r30
     b00:	85 32       	cpi	r24, 0x25	; 37
     b02:	29 f4       	brne	.+10     	; 0xb0e <vfprintf+0x56>
     b04:	b6 01       	movw	r22, r12
     b06:	90 e0       	ldi	r25, 0x00	; 0
     b08:	0e 94 85 09 	call	0x130a	; 0x130a <fputc>
     b0c:	e7 cf       	rjmp	.-50     	; 0xadc <vfprintf+0x24>
     b0e:	91 2c       	mov	r9, r1
     b10:	21 2c       	mov	r2, r1
     b12:	31 2c       	mov	r3, r1
     b14:	ff e1       	ldi	r31, 0x1F	; 31
     b16:	f3 15       	cp	r31, r3
     b18:	d8 f0       	brcs	.+54     	; 0xb50 <vfprintf+0x98>
     b1a:	8b 32       	cpi	r24, 0x2B	; 43
     b1c:	79 f0       	breq	.+30     	; 0xb3c <vfprintf+0x84>
     b1e:	38 f4       	brcc	.+14     	; 0xb2e <vfprintf+0x76>
     b20:	80 32       	cpi	r24, 0x20	; 32
     b22:	79 f0       	breq	.+30     	; 0xb42 <vfprintf+0x8a>
     b24:	83 32       	cpi	r24, 0x23	; 35
     b26:	a1 f4       	brne	.+40     	; 0xb50 <vfprintf+0x98>
     b28:	23 2d       	mov	r18, r3
     b2a:	20 61       	ori	r18, 0x10	; 16
     b2c:	1d c0       	rjmp	.+58     	; 0xb68 <vfprintf+0xb0>
     b2e:	8d 32       	cpi	r24, 0x2D	; 45
     b30:	61 f0       	breq	.+24     	; 0xb4a <vfprintf+0x92>
     b32:	80 33       	cpi	r24, 0x30	; 48
     b34:	69 f4       	brne	.+26     	; 0xb50 <vfprintf+0x98>
     b36:	23 2d       	mov	r18, r3
     b38:	21 60       	ori	r18, 0x01	; 1
     b3a:	16 c0       	rjmp	.+44     	; 0xb68 <vfprintf+0xb0>
     b3c:	83 2d       	mov	r24, r3
     b3e:	82 60       	ori	r24, 0x02	; 2
     b40:	38 2e       	mov	r3, r24
     b42:	e3 2d       	mov	r30, r3
     b44:	e4 60       	ori	r30, 0x04	; 4
     b46:	3e 2e       	mov	r3, r30
     b48:	2a c0       	rjmp	.+84     	; 0xb9e <vfprintf+0xe6>
     b4a:	f3 2d       	mov	r31, r3
     b4c:	f8 60       	ori	r31, 0x08	; 8
     b4e:	1d c0       	rjmp	.+58     	; 0xb8a <vfprintf+0xd2>
     b50:	37 fc       	sbrc	r3, 7
     b52:	2d c0       	rjmp	.+90     	; 0xbae <vfprintf+0xf6>
     b54:	20 ed       	ldi	r18, 0xD0	; 208
     b56:	28 0f       	add	r18, r24
     b58:	2a 30       	cpi	r18, 0x0A	; 10
     b5a:	40 f0       	brcs	.+16     	; 0xb6c <vfprintf+0xb4>
     b5c:	8e 32       	cpi	r24, 0x2E	; 46
     b5e:	b9 f4       	brne	.+46     	; 0xb8e <vfprintf+0xd6>
     b60:	36 fc       	sbrc	r3, 6
     b62:	81 c1       	rjmp	.+770    	; 0xe66 <vfprintf+0x3ae>
     b64:	23 2d       	mov	r18, r3
     b66:	20 64       	ori	r18, 0x40	; 64
     b68:	32 2e       	mov	r3, r18
     b6a:	19 c0       	rjmp	.+50     	; 0xb9e <vfprintf+0xe6>
     b6c:	36 fe       	sbrs	r3, 6
     b6e:	06 c0       	rjmp	.+12     	; 0xb7c <vfprintf+0xc4>
     b70:	8a e0       	ldi	r24, 0x0A	; 10
     b72:	98 9e       	mul	r9, r24
     b74:	20 0d       	add	r18, r0
     b76:	11 24       	eor	r1, r1
     b78:	92 2e       	mov	r9, r18
     b7a:	11 c0       	rjmp	.+34     	; 0xb9e <vfprintf+0xe6>
     b7c:	ea e0       	ldi	r30, 0x0A	; 10
     b7e:	2e 9e       	mul	r2, r30
     b80:	20 0d       	add	r18, r0
     b82:	11 24       	eor	r1, r1
     b84:	22 2e       	mov	r2, r18
     b86:	f3 2d       	mov	r31, r3
     b88:	f0 62       	ori	r31, 0x20	; 32
     b8a:	3f 2e       	mov	r3, r31
     b8c:	08 c0       	rjmp	.+16     	; 0xb9e <vfprintf+0xe6>
     b8e:	8c 36       	cpi	r24, 0x6C	; 108
     b90:	21 f4       	brne	.+8      	; 0xb9a <vfprintf+0xe2>
     b92:	83 2d       	mov	r24, r3
     b94:	80 68       	ori	r24, 0x80	; 128
     b96:	38 2e       	mov	r3, r24
     b98:	02 c0       	rjmp	.+4      	; 0xb9e <vfprintf+0xe6>
     b9a:	88 36       	cpi	r24, 0x68	; 104
     b9c:	41 f4       	brne	.+16     	; 0xbae <vfprintf+0xf6>
     b9e:	f7 01       	movw	r30, r14
     ba0:	93 fd       	sbrc	r25, 3
     ba2:	85 91       	lpm	r24, Z+
     ba4:	93 ff       	sbrs	r25, 3
     ba6:	81 91       	ld	r24, Z+
     ba8:	7f 01       	movw	r14, r30
     baa:	81 11       	cpse	r24, r1
     bac:	b3 cf       	rjmp	.-154    	; 0xb14 <vfprintf+0x5c>
     bae:	98 2f       	mov	r25, r24
     bb0:	9f 7d       	andi	r25, 0xDF	; 223
     bb2:	95 54       	subi	r25, 0x45	; 69
     bb4:	93 30       	cpi	r25, 0x03	; 3
     bb6:	28 f4       	brcc	.+10     	; 0xbc2 <vfprintf+0x10a>
     bb8:	0c 5f       	subi	r16, 0xFC	; 252
     bba:	1f 4f       	sbci	r17, 0xFF	; 255
     bbc:	9f e3       	ldi	r25, 0x3F	; 63
     bbe:	99 83       	std	Y+1, r25	; 0x01
     bc0:	0d c0       	rjmp	.+26     	; 0xbdc <vfprintf+0x124>
     bc2:	83 36       	cpi	r24, 0x63	; 99
     bc4:	31 f0       	breq	.+12     	; 0xbd2 <vfprintf+0x11a>
     bc6:	83 37       	cpi	r24, 0x73	; 115
     bc8:	71 f0       	breq	.+28     	; 0xbe6 <vfprintf+0x12e>
     bca:	83 35       	cpi	r24, 0x53	; 83
     bcc:	09 f0       	breq	.+2      	; 0xbd0 <vfprintf+0x118>
     bce:	59 c0       	rjmp	.+178    	; 0xc82 <vfprintf+0x1ca>
     bd0:	21 c0       	rjmp	.+66     	; 0xc14 <vfprintf+0x15c>
     bd2:	f8 01       	movw	r30, r16
     bd4:	80 81       	ld	r24, Z
     bd6:	89 83       	std	Y+1, r24	; 0x01
     bd8:	0e 5f       	subi	r16, 0xFE	; 254
     bda:	1f 4f       	sbci	r17, 0xFF	; 255
     bdc:	88 24       	eor	r8, r8
     bde:	83 94       	inc	r8
     be0:	91 2c       	mov	r9, r1
     be2:	53 01       	movw	r10, r6
     be4:	13 c0       	rjmp	.+38     	; 0xc0c <vfprintf+0x154>
     be6:	28 01       	movw	r4, r16
     be8:	f2 e0       	ldi	r31, 0x02	; 2
     bea:	4f 0e       	add	r4, r31
     bec:	51 1c       	adc	r5, r1
     bee:	f8 01       	movw	r30, r16
     bf0:	a0 80       	ld	r10, Z
     bf2:	b1 80       	ldd	r11, Z+1	; 0x01
     bf4:	36 fe       	sbrs	r3, 6
     bf6:	03 c0       	rjmp	.+6      	; 0xbfe <vfprintf+0x146>
     bf8:	69 2d       	mov	r22, r9
     bfa:	70 e0       	ldi	r23, 0x00	; 0
     bfc:	02 c0       	rjmp	.+4      	; 0xc02 <vfprintf+0x14a>
     bfe:	6f ef       	ldi	r22, 0xFF	; 255
     c00:	7f ef       	ldi	r23, 0xFF	; 255
     c02:	c5 01       	movw	r24, r10
     c04:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <strnlen>
     c08:	4c 01       	movw	r8, r24
     c0a:	82 01       	movw	r16, r4
     c0c:	f3 2d       	mov	r31, r3
     c0e:	ff 77       	andi	r31, 0x7F	; 127
     c10:	3f 2e       	mov	r3, r31
     c12:	16 c0       	rjmp	.+44     	; 0xc40 <vfprintf+0x188>
     c14:	28 01       	movw	r4, r16
     c16:	22 e0       	ldi	r18, 0x02	; 2
     c18:	42 0e       	add	r4, r18
     c1a:	51 1c       	adc	r5, r1
     c1c:	f8 01       	movw	r30, r16
     c1e:	a0 80       	ld	r10, Z
     c20:	b1 80       	ldd	r11, Z+1	; 0x01
     c22:	36 fe       	sbrs	r3, 6
     c24:	03 c0       	rjmp	.+6      	; 0xc2c <vfprintf+0x174>
     c26:	69 2d       	mov	r22, r9
     c28:	70 e0       	ldi	r23, 0x00	; 0
     c2a:	02 c0       	rjmp	.+4      	; 0xc30 <vfprintf+0x178>
     c2c:	6f ef       	ldi	r22, 0xFF	; 255
     c2e:	7f ef       	ldi	r23, 0xFF	; 255
     c30:	c5 01       	movw	r24, r10
     c32:	0e 94 6f 09 	call	0x12de	; 0x12de <strnlen_P>
     c36:	4c 01       	movw	r8, r24
     c38:	f3 2d       	mov	r31, r3
     c3a:	f0 68       	ori	r31, 0x80	; 128
     c3c:	3f 2e       	mov	r3, r31
     c3e:	82 01       	movw	r16, r4
     c40:	33 fc       	sbrc	r3, 3
     c42:	1b c0       	rjmp	.+54     	; 0xc7a <vfprintf+0x1c2>
     c44:	82 2d       	mov	r24, r2
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	88 16       	cp	r8, r24
     c4a:	99 06       	cpc	r9, r25
     c4c:	b0 f4       	brcc	.+44     	; 0xc7a <vfprintf+0x1c2>
     c4e:	b6 01       	movw	r22, r12
     c50:	80 e2       	ldi	r24, 0x20	; 32
     c52:	90 e0       	ldi	r25, 0x00	; 0
     c54:	0e 94 85 09 	call	0x130a	; 0x130a <fputc>
     c58:	2a 94       	dec	r2
     c5a:	f4 cf       	rjmp	.-24     	; 0xc44 <vfprintf+0x18c>
     c5c:	f5 01       	movw	r30, r10
     c5e:	37 fc       	sbrc	r3, 7
     c60:	85 91       	lpm	r24, Z+
     c62:	37 fe       	sbrs	r3, 7
     c64:	81 91       	ld	r24, Z+
     c66:	5f 01       	movw	r10, r30
     c68:	b6 01       	movw	r22, r12
     c6a:	90 e0       	ldi	r25, 0x00	; 0
     c6c:	0e 94 85 09 	call	0x130a	; 0x130a <fputc>
     c70:	21 10       	cpse	r2, r1
     c72:	2a 94       	dec	r2
     c74:	21 e0       	ldi	r18, 0x01	; 1
     c76:	82 1a       	sub	r8, r18
     c78:	91 08       	sbc	r9, r1
     c7a:	81 14       	cp	r8, r1
     c7c:	91 04       	cpc	r9, r1
     c7e:	71 f7       	brne	.-36     	; 0xc5c <vfprintf+0x1a4>
     c80:	e8 c0       	rjmp	.+464    	; 0xe52 <vfprintf+0x39a>
     c82:	84 36       	cpi	r24, 0x64	; 100
     c84:	11 f0       	breq	.+4      	; 0xc8a <vfprintf+0x1d2>
     c86:	89 36       	cpi	r24, 0x69	; 105
     c88:	41 f5       	brne	.+80     	; 0xcda <vfprintf+0x222>
     c8a:	f8 01       	movw	r30, r16
     c8c:	37 fe       	sbrs	r3, 7
     c8e:	07 c0       	rjmp	.+14     	; 0xc9e <vfprintf+0x1e6>
     c90:	60 81       	ld	r22, Z
     c92:	71 81       	ldd	r23, Z+1	; 0x01
     c94:	82 81       	ldd	r24, Z+2	; 0x02
     c96:	93 81       	ldd	r25, Z+3	; 0x03
     c98:	0c 5f       	subi	r16, 0xFC	; 252
     c9a:	1f 4f       	sbci	r17, 0xFF	; 255
     c9c:	08 c0       	rjmp	.+16     	; 0xcae <vfprintf+0x1f6>
     c9e:	60 81       	ld	r22, Z
     ca0:	71 81       	ldd	r23, Z+1	; 0x01
     ca2:	07 2e       	mov	r0, r23
     ca4:	00 0c       	add	r0, r0
     ca6:	88 0b       	sbc	r24, r24
     ca8:	99 0b       	sbc	r25, r25
     caa:	0e 5f       	subi	r16, 0xFE	; 254
     cac:	1f 4f       	sbci	r17, 0xFF	; 255
     cae:	f3 2d       	mov	r31, r3
     cb0:	ff 76       	andi	r31, 0x6F	; 111
     cb2:	3f 2e       	mov	r3, r31
     cb4:	97 ff       	sbrs	r25, 7
     cb6:	09 c0       	rjmp	.+18     	; 0xcca <vfprintf+0x212>
     cb8:	90 95       	com	r25
     cba:	80 95       	com	r24
     cbc:	70 95       	com	r23
     cbe:	61 95       	neg	r22
     cc0:	7f 4f       	sbci	r23, 0xFF	; 255
     cc2:	8f 4f       	sbci	r24, 0xFF	; 255
     cc4:	9f 4f       	sbci	r25, 0xFF	; 255
     cc6:	f0 68       	ori	r31, 0x80	; 128
     cc8:	3f 2e       	mov	r3, r31
     cca:	2a e0       	ldi	r18, 0x0A	; 10
     ccc:	30 e0       	ldi	r19, 0x00	; 0
     cce:	a3 01       	movw	r20, r6
     cd0:	0e 94 c1 09 	call	0x1382	; 0x1382 <__ultoa_invert>
     cd4:	88 2e       	mov	r8, r24
     cd6:	86 18       	sub	r8, r6
     cd8:	45 c0       	rjmp	.+138    	; 0xd64 <vfprintf+0x2ac>
     cda:	85 37       	cpi	r24, 0x75	; 117
     cdc:	31 f4       	brne	.+12     	; 0xcea <vfprintf+0x232>
     cde:	23 2d       	mov	r18, r3
     ce0:	2f 7e       	andi	r18, 0xEF	; 239
     ce2:	b2 2e       	mov	r11, r18
     ce4:	2a e0       	ldi	r18, 0x0A	; 10
     ce6:	30 e0       	ldi	r19, 0x00	; 0
     ce8:	25 c0       	rjmp	.+74     	; 0xd34 <vfprintf+0x27c>
     cea:	93 2d       	mov	r25, r3
     cec:	99 7f       	andi	r25, 0xF9	; 249
     cee:	b9 2e       	mov	r11, r25
     cf0:	8f 36       	cpi	r24, 0x6F	; 111
     cf2:	c1 f0       	breq	.+48     	; 0xd24 <vfprintf+0x26c>
     cf4:	18 f4       	brcc	.+6      	; 0xcfc <vfprintf+0x244>
     cf6:	88 35       	cpi	r24, 0x58	; 88
     cf8:	79 f0       	breq	.+30     	; 0xd18 <vfprintf+0x260>
     cfa:	b5 c0       	rjmp	.+362    	; 0xe66 <vfprintf+0x3ae>
     cfc:	80 37       	cpi	r24, 0x70	; 112
     cfe:	19 f0       	breq	.+6      	; 0xd06 <vfprintf+0x24e>
     d00:	88 37       	cpi	r24, 0x78	; 120
     d02:	21 f0       	breq	.+8      	; 0xd0c <vfprintf+0x254>
     d04:	b0 c0       	rjmp	.+352    	; 0xe66 <vfprintf+0x3ae>
     d06:	e9 2f       	mov	r30, r25
     d08:	e0 61       	ori	r30, 0x10	; 16
     d0a:	be 2e       	mov	r11, r30
     d0c:	b4 fe       	sbrs	r11, 4
     d0e:	0d c0       	rjmp	.+26     	; 0xd2a <vfprintf+0x272>
     d10:	fb 2d       	mov	r31, r11
     d12:	f4 60       	ori	r31, 0x04	; 4
     d14:	bf 2e       	mov	r11, r31
     d16:	09 c0       	rjmp	.+18     	; 0xd2a <vfprintf+0x272>
     d18:	34 fe       	sbrs	r3, 4
     d1a:	0a c0       	rjmp	.+20     	; 0xd30 <vfprintf+0x278>
     d1c:	29 2f       	mov	r18, r25
     d1e:	26 60       	ori	r18, 0x06	; 6
     d20:	b2 2e       	mov	r11, r18
     d22:	06 c0       	rjmp	.+12     	; 0xd30 <vfprintf+0x278>
     d24:	28 e0       	ldi	r18, 0x08	; 8
     d26:	30 e0       	ldi	r19, 0x00	; 0
     d28:	05 c0       	rjmp	.+10     	; 0xd34 <vfprintf+0x27c>
     d2a:	20 e1       	ldi	r18, 0x10	; 16
     d2c:	30 e0       	ldi	r19, 0x00	; 0
     d2e:	02 c0       	rjmp	.+4      	; 0xd34 <vfprintf+0x27c>
     d30:	20 e1       	ldi	r18, 0x10	; 16
     d32:	32 e0       	ldi	r19, 0x02	; 2
     d34:	f8 01       	movw	r30, r16
     d36:	b7 fe       	sbrs	r11, 7
     d38:	07 c0       	rjmp	.+14     	; 0xd48 <vfprintf+0x290>
     d3a:	60 81       	ld	r22, Z
     d3c:	71 81       	ldd	r23, Z+1	; 0x01
     d3e:	82 81       	ldd	r24, Z+2	; 0x02
     d40:	93 81       	ldd	r25, Z+3	; 0x03
     d42:	0c 5f       	subi	r16, 0xFC	; 252
     d44:	1f 4f       	sbci	r17, 0xFF	; 255
     d46:	06 c0       	rjmp	.+12     	; 0xd54 <vfprintf+0x29c>
     d48:	60 81       	ld	r22, Z
     d4a:	71 81       	ldd	r23, Z+1	; 0x01
     d4c:	80 e0       	ldi	r24, 0x00	; 0
     d4e:	90 e0       	ldi	r25, 0x00	; 0
     d50:	0e 5f       	subi	r16, 0xFE	; 254
     d52:	1f 4f       	sbci	r17, 0xFF	; 255
     d54:	a3 01       	movw	r20, r6
     d56:	0e 94 c1 09 	call	0x1382	; 0x1382 <__ultoa_invert>
     d5a:	88 2e       	mov	r8, r24
     d5c:	86 18       	sub	r8, r6
     d5e:	fb 2d       	mov	r31, r11
     d60:	ff 77       	andi	r31, 0x7F	; 127
     d62:	3f 2e       	mov	r3, r31
     d64:	36 fe       	sbrs	r3, 6
     d66:	0d c0       	rjmp	.+26     	; 0xd82 <vfprintf+0x2ca>
     d68:	23 2d       	mov	r18, r3
     d6a:	2e 7f       	andi	r18, 0xFE	; 254
     d6c:	a2 2e       	mov	r10, r18
     d6e:	89 14       	cp	r8, r9
     d70:	58 f4       	brcc	.+22     	; 0xd88 <vfprintf+0x2d0>
     d72:	34 fe       	sbrs	r3, 4
     d74:	0b c0       	rjmp	.+22     	; 0xd8c <vfprintf+0x2d4>
     d76:	32 fc       	sbrc	r3, 2
     d78:	09 c0       	rjmp	.+18     	; 0xd8c <vfprintf+0x2d4>
     d7a:	83 2d       	mov	r24, r3
     d7c:	8e 7e       	andi	r24, 0xEE	; 238
     d7e:	a8 2e       	mov	r10, r24
     d80:	05 c0       	rjmp	.+10     	; 0xd8c <vfprintf+0x2d4>
     d82:	b8 2c       	mov	r11, r8
     d84:	a3 2c       	mov	r10, r3
     d86:	03 c0       	rjmp	.+6      	; 0xd8e <vfprintf+0x2d6>
     d88:	b8 2c       	mov	r11, r8
     d8a:	01 c0       	rjmp	.+2      	; 0xd8e <vfprintf+0x2d6>
     d8c:	b9 2c       	mov	r11, r9
     d8e:	a4 fe       	sbrs	r10, 4
     d90:	0f c0       	rjmp	.+30     	; 0xdb0 <vfprintf+0x2f8>
     d92:	fe 01       	movw	r30, r28
     d94:	e8 0d       	add	r30, r8
     d96:	f1 1d       	adc	r31, r1
     d98:	80 81       	ld	r24, Z
     d9a:	80 33       	cpi	r24, 0x30	; 48
     d9c:	21 f4       	brne	.+8      	; 0xda6 <vfprintf+0x2ee>
     d9e:	9a 2d       	mov	r25, r10
     da0:	99 7e       	andi	r25, 0xE9	; 233
     da2:	a9 2e       	mov	r10, r25
     da4:	09 c0       	rjmp	.+18     	; 0xdb8 <vfprintf+0x300>
     da6:	a2 fe       	sbrs	r10, 2
     da8:	06 c0       	rjmp	.+12     	; 0xdb6 <vfprintf+0x2fe>
     daa:	b3 94       	inc	r11
     dac:	b3 94       	inc	r11
     dae:	04 c0       	rjmp	.+8      	; 0xdb8 <vfprintf+0x300>
     db0:	8a 2d       	mov	r24, r10
     db2:	86 78       	andi	r24, 0x86	; 134
     db4:	09 f0       	breq	.+2      	; 0xdb8 <vfprintf+0x300>
     db6:	b3 94       	inc	r11
     db8:	a3 fc       	sbrc	r10, 3
     dba:	11 c0       	rjmp	.+34     	; 0xdde <vfprintf+0x326>
     dbc:	a0 fe       	sbrs	r10, 0
     dbe:	06 c0       	rjmp	.+12     	; 0xdcc <vfprintf+0x314>
     dc0:	b2 14       	cp	r11, r2
     dc2:	88 f4       	brcc	.+34     	; 0xde6 <vfprintf+0x32e>
     dc4:	28 0c       	add	r2, r8
     dc6:	92 2c       	mov	r9, r2
     dc8:	9b 18       	sub	r9, r11
     dca:	0e c0       	rjmp	.+28     	; 0xde8 <vfprintf+0x330>
     dcc:	b2 14       	cp	r11, r2
     dce:	60 f4       	brcc	.+24     	; 0xde8 <vfprintf+0x330>
     dd0:	b6 01       	movw	r22, r12
     dd2:	80 e2       	ldi	r24, 0x20	; 32
     dd4:	90 e0       	ldi	r25, 0x00	; 0
     dd6:	0e 94 85 09 	call	0x130a	; 0x130a <fputc>
     dda:	b3 94       	inc	r11
     ddc:	f7 cf       	rjmp	.-18     	; 0xdcc <vfprintf+0x314>
     dde:	b2 14       	cp	r11, r2
     de0:	18 f4       	brcc	.+6      	; 0xde8 <vfprintf+0x330>
     de2:	2b 18       	sub	r2, r11
     de4:	02 c0       	rjmp	.+4      	; 0xdea <vfprintf+0x332>
     de6:	98 2c       	mov	r9, r8
     de8:	21 2c       	mov	r2, r1
     dea:	a4 fe       	sbrs	r10, 4
     dec:	10 c0       	rjmp	.+32     	; 0xe0e <vfprintf+0x356>
     dee:	b6 01       	movw	r22, r12
     df0:	80 e3       	ldi	r24, 0x30	; 48
     df2:	90 e0       	ldi	r25, 0x00	; 0
     df4:	0e 94 85 09 	call	0x130a	; 0x130a <fputc>
     df8:	a2 fe       	sbrs	r10, 2
     dfa:	17 c0       	rjmp	.+46     	; 0xe2a <vfprintf+0x372>
     dfc:	a1 fc       	sbrc	r10, 1
     dfe:	03 c0       	rjmp	.+6      	; 0xe06 <vfprintf+0x34e>
     e00:	88 e7       	ldi	r24, 0x78	; 120
     e02:	90 e0       	ldi	r25, 0x00	; 0
     e04:	02 c0       	rjmp	.+4      	; 0xe0a <vfprintf+0x352>
     e06:	88 e5       	ldi	r24, 0x58	; 88
     e08:	90 e0       	ldi	r25, 0x00	; 0
     e0a:	b6 01       	movw	r22, r12
     e0c:	0c c0       	rjmp	.+24     	; 0xe26 <vfprintf+0x36e>
     e0e:	8a 2d       	mov	r24, r10
     e10:	86 78       	andi	r24, 0x86	; 134
     e12:	59 f0       	breq	.+22     	; 0xe2a <vfprintf+0x372>
     e14:	a1 fe       	sbrs	r10, 1
     e16:	02 c0       	rjmp	.+4      	; 0xe1c <vfprintf+0x364>
     e18:	8b e2       	ldi	r24, 0x2B	; 43
     e1a:	01 c0       	rjmp	.+2      	; 0xe1e <vfprintf+0x366>
     e1c:	80 e2       	ldi	r24, 0x20	; 32
     e1e:	a7 fc       	sbrc	r10, 7
     e20:	8d e2       	ldi	r24, 0x2D	; 45
     e22:	b6 01       	movw	r22, r12
     e24:	90 e0       	ldi	r25, 0x00	; 0
     e26:	0e 94 85 09 	call	0x130a	; 0x130a <fputc>
     e2a:	89 14       	cp	r8, r9
     e2c:	38 f4       	brcc	.+14     	; 0xe3c <vfprintf+0x384>
     e2e:	b6 01       	movw	r22, r12
     e30:	80 e3       	ldi	r24, 0x30	; 48
     e32:	90 e0       	ldi	r25, 0x00	; 0
     e34:	0e 94 85 09 	call	0x130a	; 0x130a <fputc>
     e38:	9a 94       	dec	r9
     e3a:	f7 cf       	rjmp	.-18     	; 0xe2a <vfprintf+0x372>
     e3c:	8a 94       	dec	r8
     e3e:	f3 01       	movw	r30, r6
     e40:	e8 0d       	add	r30, r8
     e42:	f1 1d       	adc	r31, r1
     e44:	80 81       	ld	r24, Z
     e46:	b6 01       	movw	r22, r12
     e48:	90 e0       	ldi	r25, 0x00	; 0
     e4a:	0e 94 85 09 	call	0x130a	; 0x130a <fputc>
     e4e:	81 10       	cpse	r8, r1
     e50:	f5 cf       	rjmp	.-22     	; 0xe3c <vfprintf+0x384>
     e52:	22 20       	and	r2, r2
     e54:	09 f4       	brne	.+2      	; 0xe58 <vfprintf+0x3a0>
     e56:	42 ce       	rjmp	.-892    	; 0xadc <vfprintf+0x24>
     e58:	b6 01       	movw	r22, r12
     e5a:	80 e2       	ldi	r24, 0x20	; 32
     e5c:	90 e0       	ldi	r25, 0x00	; 0
     e5e:	0e 94 85 09 	call	0x130a	; 0x130a <fputc>
     e62:	2a 94       	dec	r2
     e64:	f6 cf       	rjmp	.-20     	; 0xe52 <vfprintf+0x39a>
     e66:	f6 01       	movw	r30, r12
     e68:	86 81       	ldd	r24, Z+6	; 0x06
     e6a:	97 81       	ldd	r25, Z+7	; 0x07
     e6c:	02 c0       	rjmp	.+4      	; 0xe72 <vfprintf+0x3ba>
     e6e:	8f ef       	ldi	r24, 0xFF	; 255
     e70:	9f ef       	ldi	r25, 0xFF	; 255
     e72:	2b 96       	adiw	r28, 0x0b	; 11
     e74:	e2 e1       	ldi	r30, 0x12	; 18
     e76:	0c 94 3b 0a 	jmp	0x1476	; 0x1476 <__epilogue_restores__>

00000e7a <dtoa_prf>:
     e7a:	a9 e0       	ldi	r26, 0x09	; 9
     e7c:	b0 e0       	ldi	r27, 0x00	; 0
     e7e:	e3 e4       	ldi	r30, 0x43	; 67
     e80:	f7 e0       	ldi	r31, 0x07	; 7
     e82:	0c 94 25 0a 	jmp	0x144a	; 0x144a <__prologue_saves__+0xc>
     e86:	6a 01       	movw	r12, r20
     e88:	12 2f       	mov	r17, r18
     e8a:	b0 2e       	mov	r11, r16
     e8c:	2b e3       	ldi	r18, 0x3B	; 59
     e8e:	20 17       	cp	r18, r16
     e90:	20 f0       	brcs	.+8      	; 0xe9a <dtoa_prf+0x20>
     e92:	ff 24       	eor	r15, r15
     e94:	f3 94       	inc	r15
     e96:	f0 0e       	add	r15, r16
     e98:	02 c0       	rjmp	.+4      	; 0xe9e <dtoa_prf+0x24>
     e9a:	2c e3       	ldi	r18, 0x3C	; 60
     e9c:	f2 2e       	mov	r15, r18
     e9e:	0f 2d       	mov	r16, r15
     ea0:	27 e0       	ldi	r18, 0x07	; 7
     ea2:	ae 01       	movw	r20, r28
     ea4:	4f 5f       	subi	r20, 0xFF	; 255
     ea6:	5f 4f       	sbci	r21, 0xFF	; 255
     ea8:	0e 94 97 08 	call	0x112e	; 0x112e <__ftoa_engine>
     eac:	bc 01       	movw	r22, r24
     eae:	49 81       	ldd	r20, Y+1	; 0x01
     eb0:	84 2f       	mov	r24, r20
     eb2:	89 70       	andi	r24, 0x09	; 9
     eb4:	81 30       	cpi	r24, 0x01	; 1
     eb6:	31 f0       	breq	.+12     	; 0xec4 <dtoa_prf+0x4a>
     eb8:	e1 fc       	sbrc	r14, 1
     eba:	06 c0       	rjmp	.+12     	; 0xec8 <dtoa_prf+0x4e>
     ebc:	e0 fe       	sbrs	r14, 0
     ebe:	06 c0       	rjmp	.+12     	; 0xecc <dtoa_prf+0x52>
     ec0:	90 e2       	ldi	r25, 0x20	; 32
     ec2:	05 c0       	rjmp	.+10     	; 0xece <dtoa_prf+0x54>
     ec4:	9d e2       	ldi	r25, 0x2D	; 45
     ec6:	03 c0       	rjmp	.+6      	; 0xece <dtoa_prf+0x54>
     ec8:	9b e2       	ldi	r25, 0x2B	; 43
     eca:	01 c0       	rjmp	.+2      	; 0xece <dtoa_prf+0x54>
     ecc:	90 e0       	ldi	r25, 0x00	; 0
     ece:	5e 2d       	mov	r21, r14
     ed0:	50 71       	andi	r21, 0x10	; 16
     ed2:	43 ff       	sbrs	r20, 3
     ed4:	3c c0       	rjmp	.+120    	; 0xf4e <dtoa_prf+0xd4>
     ed6:	91 11       	cpse	r25, r1
     ed8:	02 c0       	rjmp	.+4      	; 0xede <dtoa_prf+0x64>
     eda:	83 e0       	ldi	r24, 0x03	; 3
     edc:	01 c0       	rjmp	.+2      	; 0xee0 <dtoa_prf+0x66>
     ede:	84 e0       	ldi	r24, 0x04	; 4
     ee0:	81 17       	cp	r24, r17
     ee2:	18 f4       	brcc	.+6      	; 0xeea <dtoa_prf+0x70>
     ee4:	21 2f       	mov	r18, r17
     ee6:	28 1b       	sub	r18, r24
     ee8:	01 c0       	rjmp	.+2      	; 0xeec <dtoa_prf+0x72>
     eea:	20 e0       	ldi	r18, 0x00	; 0
     eec:	51 11       	cpse	r21, r1
     eee:	0b c0       	rjmp	.+22     	; 0xf06 <dtoa_prf+0x8c>
     ef0:	f6 01       	movw	r30, r12
     ef2:	82 2f       	mov	r24, r18
     ef4:	30 e2       	ldi	r19, 0x20	; 32
     ef6:	88 23       	and	r24, r24
     ef8:	19 f0       	breq	.+6      	; 0xf00 <dtoa_prf+0x86>
     efa:	31 93       	st	Z+, r19
     efc:	81 50       	subi	r24, 0x01	; 1
     efe:	fb cf       	rjmp	.-10     	; 0xef6 <dtoa_prf+0x7c>
     f00:	c2 0e       	add	r12, r18
     f02:	d1 1c       	adc	r13, r1
     f04:	20 e0       	ldi	r18, 0x00	; 0
     f06:	99 23       	and	r25, r25
     f08:	29 f0       	breq	.+10     	; 0xf14 <dtoa_prf+0x9a>
     f0a:	d6 01       	movw	r26, r12
     f0c:	9c 93       	st	X, r25
     f0e:	f6 01       	movw	r30, r12
     f10:	31 96       	adiw	r30, 0x01	; 1
     f12:	6f 01       	movw	r12, r30
     f14:	c6 01       	movw	r24, r12
     f16:	03 96       	adiw	r24, 0x03	; 3
     f18:	e2 fe       	sbrs	r14, 2
     f1a:	0a c0       	rjmp	.+20     	; 0xf30 <dtoa_prf+0xb6>
     f1c:	3e e4       	ldi	r19, 0x4E	; 78
     f1e:	d6 01       	movw	r26, r12
     f20:	3c 93       	st	X, r19
     f22:	41 e4       	ldi	r20, 0x41	; 65
     f24:	11 96       	adiw	r26, 0x01	; 1
     f26:	4c 93       	st	X, r20
     f28:	11 97       	sbiw	r26, 0x01	; 1
     f2a:	12 96       	adiw	r26, 0x02	; 2
     f2c:	3c 93       	st	X, r19
     f2e:	06 c0       	rjmp	.+12     	; 0xf3c <dtoa_prf+0xc2>
     f30:	3e e6       	ldi	r19, 0x6E	; 110
     f32:	f6 01       	movw	r30, r12
     f34:	30 83       	st	Z, r19
     f36:	41 e6       	ldi	r20, 0x61	; 97
     f38:	41 83       	std	Z+1, r20	; 0x01
     f3a:	32 83       	std	Z+2, r19	; 0x02
     f3c:	fc 01       	movw	r30, r24
     f3e:	32 2f       	mov	r19, r18
     f40:	40 e2       	ldi	r20, 0x20	; 32
     f42:	33 23       	and	r19, r19
     f44:	09 f4       	brne	.+2      	; 0xf48 <dtoa_prf+0xce>
     f46:	42 c0       	rjmp	.+132    	; 0xfcc <dtoa_prf+0x152>
     f48:	41 93       	st	Z+, r20
     f4a:	31 50       	subi	r19, 0x01	; 1
     f4c:	fa cf       	rjmp	.-12     	; 0xf42 <dtoa_prf+0xc8>
     f4e:	42 ff       	sbrs	r20, 2
     f50:	44 c0       	rjmp	.+136    	; 0xfda <dtoa_prf+0x160>
     f52:	91 11       	cpse	r25, r1
     f54:	02 c0       	rjmp	.+4      	; 0xf5a <dtoa_prf+0xe0>
     f56:	83 e0       	ldi	r24, 0x03	; 3
     f58:	01 c0       	rjmp	.+2      	; 0xf5c <dtoa_prf+0xe2>
     f5a:	84 e0       	ldi	r24, 0x04	; 4
     f5c:	81 17       	cp	r24, r17
     f5e:	18 f4       	brcc	.+6      	; 0xf66 <dtoa_prf+0xec>
     f60:	21 2f       	mov	r18, r17
     f62:	28 1b       	sub	r18, r24
     f64:	01 c0       	rjmp	.+2      	; 0xf68 <dtoa_prf+0xee>
     f66:	20 e0       	ldi	r18, 0x00	; 0
     f68:	51 11       	cpse	r21, r1
     f6a:	0b c0       	rjmp	.+22     	; 0xf82 <dtoa_prf+0x108>
     f6c:	f6 01       	movw	r30, r12
     f6e:	82 2f       	mov	r24, r18
     f70:	30 e2       	ldi	r19, 0x20	; 32
     f72:	88 23       	and	r24, r24
     f74:	19 f0       	breq	.+6      	; 0xf7c <dtoa_prf+0x102>
     f76:	31 93       	st	Z+, r19
     f78:	81 50       	subi	r24, 0x01	; 1
     f7a:	fb cf       	rjmp	.-10     	; 0xf72 <dtoa_prf+0xf8>
     f7c:	c2 0e       	add	r12, r18
     f7e:	d1 1c       	adc	r13, r1
     f80:	20 e0       	ldi	r18, 0x00	; 0
     f82:	99 23       	and	r25, r25
     f84:	29 f0       	breq	.+10     	; 0xf90 <dtoa_prf+0x116>
     f86:	d6 01       	movw	r26, r12
     f88:	9c 93       	st	X, r25
     f8a:	f6 01       	movw	r30, r12
     f8c:	31 96       	adiw	r30, 0x01	; 1
     f8e:	6f 01       	movw	r12, r30
     f90:	c6 01       	movw	r24, r12
     f92:	03 96       	adiw	r24, 0x03	; 3
     f94:	e2 fe       	sbrs	r14, 2
     f96:	0b c0       	rjmp	.+22     	; 0xfae <dtoa_prf+0x134>
     f98:	39 e4       	ldi	r19, 0x49	; 73
     f9a:	d6 01       	movw	r26, r12
     f9c:	3c 93       	st	X, r19
     f9e:	3e e4       	ldi	r19, 0x4E	; 78
     fa0:	11 96       	adiw	r26, 0x01	; 1
     fa2:	3c 93       	st	X, r19
     fa4:	11 97       	sbiw	r26, 0x01	; 1
     fa6:	36 e4       	ldi	r19, 0x46	; 70
     fa8:	12 96       	adiw	r26, 0x02	; 2
     faa:	3c 93       	st	X, r19
     fac:	07 c0       	rjmp	.+14     	; 0xfbc <dtoa_prf+0x142>
     fae:	39 e6       	ldi	r19, 0x69	; 105
     fb0:	f6 01       	movw	r30, r12
     fb2:	30 83       	st	Z, r19
     fb4:	3e e6       	ldi	r19, 0x6E	; 110
     fb6:	31 83       	std	Z+1, r19	; 0x01
     fb8:	36 e6       	ldi	r19, 0x66	; 102
     fba:	32 83       	std	Z+2, r19	; 0x02
     fbc:	fc 01       	movw	r30, r24
     fbe:	32 2f       	mov	r19, r18
     fc0:	40 e2       	ldi	r20, 0x20	; 32
     fc2:	33 23       	and	r19, r19
     fc4:	19 f0       	breq	.+6      	; 0xfcc <dtoa_prf+0x152>
     fc6:	41 93       	st	Z+, r20
     fc8:	31 50       	subi	r19, 0x01	; 1
     fca:	fb cf       	rjmp	.-10     	; 0xfc2 <dtoa_prf+0x148>
     fcc:	fc 01       	movw	r30, r24
     fce:	e2 0f       	add	r30, r18
     fd0:	f1 1d       	adc	r31, r1
     fd2:	10 82       	st	Z, r1
     fd4:	8e ef       	ldi	r24, 0xFE	; 254
     fd6:	9f ef       	ldi	r25, 0xFF	; 255
     fd8:	a6 c0       	rjmp	.+332    	; 0x1126 <dtoa_prf+0x2ac>
     fda:	21 e0       	ldi	r18, 0x01	; 1
     fdc:	30 e0       	ldi	r19, 0x00	; 0
     fde:	91 11       	cpse	r25, r1
     fe0:	02 c0       	rjmp	.+4      	; 0xfe6 <dtoa_prf+0x16c>
     fe2:	20 e0       	ldi	r18, 0x00	; 0
     fe4:	30 e0       	ldi	r19, 0x00	; 0
     fe6:	16 16       	cp	r1, r22
     fe8:	17 06       	cpc	r1, r23
     fea:	1c f4       	brge	.+6      	; 0xff2 <dtoa_prf+0x178>
     fec:	fb 01       	movw	r30, r22
     fee:	31 96       	adiw	r30, 0x01	; 1
     ff0:	02 c0       	rjmp	.+4      	; 0xff6 <dtoa_prf+0x17c>
     ff2:	e1 e0       	ldi	r30, 0x01	; 1
     ff4:	f0 e0       	ldi	r31, 0x00	; 0
     ff6:	2e 0f       	add	r18, r30
     ff8:	3f 1f       	adc	r19, r31
     ffa:	bb 20       	and	r11, r11
     ffc:	21 f0       	breq	.+8      	; 0x1006 <dtoa_prf+0x18c>
     ffe:	eb 2d       	mov	r30, r11
    1000:	f0 e0       	ldi	r31, 0x00	; 0
    1002:	31 96       	adiw	r30, 0x01	; 1
    1004:	02 c0       	rjmp	.+4      	; 0x100a <dtoa_prf+0x190>
    1006:	e0 e0       	ldi	r30, 0x00	; 0
    1008:	f0 e0       	ldi	r31, 0x00	; 0
    100a:	2e 0f       	add	r18, r30
    100c:	3f 1f       	adc	r19, r31
    100e:	e1 2f       	mov	r30, r17
    1010:	f0 e0       	ldi	r31, 0x00	; 0
    1012:	2e 17       	cp	r18, r30
    1014:	3f 07       	cpc	r19, r31
    1016:	1c f4       	brge	.+6      	; 0x101e <dtoa_prf+0x1a4>
    1018:	12 1b       	sub	r17, r18
    101a:	21 2f       	mov	r18, r17
    101c:	01 c0       	rjmp	.+2      	; 0x1020 <dtoa_prf+0x1a6>
    101e:	20 e0       	ldi	r18, 0x00	; 0
    1020:	8e 2d       	mov	r24, r14
    1022:	88 71       	andi	r24, 0x18	; 24
    1024:	59 f4       	brne	.+22     	; 0x103c <dtoa_prf+0x1c2>
    1026:	f6 01       	movw	r30, r12
    1028:	82 2f       	mov	r24, r18
    102a:	30 e2       	ldi	r19, 0x20	; 32
    102c:	88 23       	and	r24, r24
    102e:	19 f0       	breq	.+6      	; 0x1036 <dtoa_prf+0x1bc>
    1030:	31 93       	st	Z+, r19
    1032:	81 50       	subi	r24, 0x01	; 1
    1034:	fb cf       	rjmp	.-10     	; 0x102c <dtoa_prf+0x1b2>
    1036:	c2 0e       	add	r12, r18
    1038:	d1 1c       	adc	r13, r1
    103a:	20 e0       	ldi	r18, 0x00	; 0
    103c:	99 23       	and	r25, r25
    103e:	29 f0       	breq	.+10     	; 0x104a <dtoa_prf+0x1d0>
    1040:	d6 01       	movw	r26, r12
    1042:	9c 93       	st	X, r25
    1044:	f6 01       	movw	r30, r12
    1046:	31 96       	adiw	r30, 0x01	; 1
    1048:	6f 01       	movw	r12, r30
    104a:	51 11       	cpse	r21, r1
    104c:	0b c0       	rjmp	.+22     	; 0x1064 <dtoa_prf+0x1ea>
    104e:	f6 01       	movw	r30, r12
    1050:	82 2f       	mov	r24, r18
    1052:	90 e3       	ldi	r25, 0x30	; 48
    1054:	88 23       	and	r24, r24
    1056:	19 f0       	breq	.+6      	; 0x105e <dtoa_prf+0x1e4>
    1058:	91 93       	st	Z+, r25
    105a:	81 50       	subi	r24, 0x01	; 1
    105c:	fb cf       	rjmp	.-10     	; 0x1054 <dtoa_prf+0x1da>
    105e:	c2 0e       	add	r12, r18
    1060:	d1 1c       	adc	r13, r1
    1062:	20 e0       	ldi	r18, 0x00	; 0
    1064:	0f 2d       	mov	r16, r15
    1066:	06 0f       	add	r16, r22
    1068:	9a 81       	ldd	r25, Y+2	; 0x02
    106a:	34 2f       	mov	r19, r20
    106c:	30 71       	andi	r19, 0x10	; 16
    106e:	44 ff       	sbrs	r20, 4
    1070:	03 c0       	rjmp	.+6      	; 0x1078 <dtoa_prf+0x1fe>
    1072:	91 33       	cpi	r25, 0x31	; 49
    1074:	09 f4       	brne	.+2      	; 0x1078 <dtoa_prf+0x1fe>
    1076:	01 50       	subi	r16, 0x01	; 1
    1078:	10 16       	cp	r1, r16
    107a:	24 f4       	brge	.+8      	; 0x1084 <dtoa_prf+0x20a>
    107c:	09 30       	cpi	r16, 0x09	; 9
    107e:	18 f0       	brcs	.+6      	; 0x1086 <dtoa_prf+0x20c>
    1080:	08 e0       	ldi	r16, 0x08	; 8
    1082:	01 c0       	rjmp	.+2      	; 0x1086 <dtoa_prf+0x20c>
    1084:	01 e0       	ldi	r16, 0x01	; 1
    1086:	ab 01       	movw	r20, r22
    1088:	77 ff       	sbrs	r23, 7
    108a:	02 c0       	rjmp	.+4      	; 0x1090 <dtoa_prf+0x216>
    108c:	40 e0       	ldi	r20, 0x00	; 0
    108e:	50 e0       	ldi	r21, 0x00	; 0
    1090:	fb 01       	movw	r30, r22
    1092:	e4 1b       	sub	r30, r20
    1094:	f5 0b       	sbc	r31, r21
    1096:	a1 e0       	ldi	r26, 0x01	; 1
    1098:	b0 e0       	ldi	r27, 0x00	; 0
    109a:	ac 0f       	add	r26, r28
    109c:	bd 1f       	adc	r27, r29
    109e:	ea 0f       	add	r30, r26
    10a0:	fb 1f       	adc	r31, r27
    10a2:	8e e2       	ldi	r24, 0x2E	; 46
    10a4:	a8 2e       	mov	r10, r24
    10a6:	4b 01       	movw	r8, r22
    10a8:	80 1a       	sub	r8, r16
    10aa:	91 08       	sbc	r9, r1
    10ac:	0b 2d       	mov	r16, r11
    10ae:	10 e0       	ldi	r17, 0x00	; 0
    10b0:	11 95       	neg	r17
    10b2:	01 95       	neg	r16
    10b4:	11 09       	sbc	r17, r1
    10b6:	4f 3f       	cpi	r20, 0xFF	; 255
    10b8:	bf ef       	ldi	r27, 0xFF	; 255
    10ba:	5b 07       	cpc	r21, r27
    10bc:	21 f4       	brne	.+8      	; 0x10c6 <dtoa_prf+0x24c>
    10be:	d6 01       	movw	r26, r12
    10c0:	ac 92       	st	X, r10
    10c2:	11 96       	adiw	r26, 0x01	; 1
    10c4:	6d 01       	movw	r12, r26
    10c6:	64 17       	cp	r22, r20
    10c8:	75 07       	cpc	r23, r21
    10ca:	2c f0       	brlt	.+10     	; 0x10d6 <dtoa_prf+0x25c>
    10cc:	84 16       	cp	r8, r20
    10ce:	95 06       	cpc	r9, r21
    10d0:	14 f4       	brge	.+4      	; 0x10d6 <dtoa_prf+0x25c>
    10d2:	81 81       	ldd	r24, Z+1	; 0x01
    10d4:	01 c0       	rjmp	.+2      	; 0x10d8 <dtoa_prf+0x25e>
    10d6:	80 e3       	ldi	r24, 0x30	; 48
    10d8:	41 50       	subi	r20, 0x01	; 1
    10da:	51 09       	sbc	r21, r1
    10dc:	31 96       	adiw	r30, 0x01	; 1
    10de:	d6 01       	movw	r26, r12
    10e0:	11 96       	adiw	r26, 0x01	; 1
    10e2:	7d 01       	movw	r14, r26
    10e4:	40 17       	cp	r20, r16
    10e6:	51 07       	cpc	r21, r17
    10e8:	24 f0       	brlt	.+8      	; 0x10f2 <dtoa_prf+0x278>
    10ea:	d6 01       	movw	r26, r12
    10ec:	8c 93       	st	X, r24
    10ee:	67 01       	movw	r12, r14
    10f0:	e2 cf       	rjmp	.-60     	; 0x10b6 <dtoa_prf+0x23c>
    10f2:	64 17       	cp	r22, r20
    10f4:	75 07       	cpc	r23, r21
    10f6:	39 f4       	brne	.+14     	; 0x1106 <dtoa_prf+0x28c>
    10f8:	96 33       	cpi	r25, 0x36	; 54
    10fa:	20 f4       	brcc	.+8      	; 0x1104 <dtoa_prf+0x28a>
    10fc:	95 33       	cpi	r25, 0x35	; 53
    10fe:	19 f4       	brne	.+6      	; 0x1106 <dtoa_prf+0x28c>
    1100:	31 11       	cpse	r19, r1
    1102:	01 c0       	rjmp	.+2      	; 0x1106 <dtoa_prf+0x28c>
    1104:	81 e3       	ldi	r24, 0x31	; 49
    1106:	f6 01       	movw	r30, r12
    1108:	80 83       	st	Z, r24
    110a:	f7 01       	movw	r30, r14
    110c:	82 2f       	mov	r24, r18
    110e:	90 e2       	ldi	r25, 0x20	; 32
    1110:	88 23       	and	r24, r24
    1112:	19 f0       	breq	.+6      	; 0x111a <dtoa_prf+0x2a0>
    1114:	91 93       	st	Z+, r25
    1116:	81 50       	subi	r24, 0x01	; 1
    1118:	fb cf       	rjmp	.-10     	; 0x1110 <dtoa_prf+0x296>
    111a:	f7 01       	movw	r30, r14
    111c:	e2 0f       	add	r30, r18
    111e:	f1 1d       	adc	r31, r1
    1120:	10 82       	st	Z, r1
    1122:	80 e0       	ldi	r24, 0x00	; 0
    1124:	90 e0       	ldi	r25, 0x00	; 0
    1126:	29 96       	adiw	r28, 0x09	; 9
    1128:	ec e0       	ldi	r30, 0x0C	; 12
    112a:	0c 94 41 0a 	jmp	0x1482	; 0x1482 <__epilogue_restores__+0xc>

0000112e <__ftoa_engine>:
    112e:	28 30       	cpi	r18, 0x08	; 8
    1130:	08 f0       	brcs	.+2      	; 0x1134 <__ftoa_engine+0x6>
    1132:	27 e0       	ldi	r18, 0x07	; 7
    1134:	33 27       	eor	r19, r19
    1136:	da 01       	movw	r26, r20
    1138:	99 0f       	add	r25, r25
    113a:	31 1d       	adc	r19, r1
    113c:	87 fd       	sbrc	r24, 7
    113e:	91 60       	ori	r25, 0x01	; 1
    1140:	00 96       	adiw	r24, 0x00	; 0
    1142:	61 05       	cpc	r22, r1
    1144:	71 05       	cpc	r23, r1
    1146:	39 f4       	brne	.+14     	; 0x1156 <__ftoa_engine+0x28>
    1148:	32 60       	ori	r19, 0x02	; 2
    114a:	2e 5f       	subi	r18, 0xFE	; 254
    114c:	3d 93       	st	X+, r19
    114e:	30 e3       	ldi	r19, 0x30	; 48
    1150:	2a 95       	dec	r18
    1152:	e1 f7       	brne	.-8      	; 0x114c <__ftoa_engine+0x1e>
    1154:	08 95       	ret
    1156:	9f 3f       	cpi	r25, 0xFF	; 255
    1158:	30 f0       	brcs	.+12     	; 0x1166 <__ftoa_engine+0x38>
    115a:	80 38       	cpi	r24, 0x80	; 128
    115c:	71 05       	cpc	r23, r1
    115e:	61 05       	cpc	r22, r1
    1160:	09 f0       	breq	.+2      	; 0x1164 <__ftoa_engine+0x36>
    1162:	3c 5f       	subi	r19, 0xFC	; 252
    1164:	3c 5f       	subi	r19, 0xFC	; 252
    1166:	3d 93       	st	X+, r19
    1168:	91 30       	cpi	r25, 0x01	; 1
    116a:	08 f0       	brcs	.+2      	; 0x116e <__ftoa_engine+0x40>
    116c:	80 68       	ori	r24, 0x80	; 128
    116e:	91 1d       	adc	r25, r1
    1170:	df 93       	push	r29
    1172:	cf 93       	push	r28
    1174:	1f 93       	push	r17
    1176:	0f 93       	push	r16
    1178:	ff 92       	push	r15
    117a:	ef 92       	push	r14
    117c:	19 2f       	mov	r17, r25
    117e:	98 7f       	andi	r25, 0xF8	; 248
    1180:	96 95       	lsr	r25
    1182:	e9 2f       	mov	r30, r25
    1184:	96 95       	lsr	r25
    1186:	96 95       	lsr	r25
    1188:	e9 0f       	add	r30, r25
    118a:	ff 27       	eor	r31, r31
    118c:	ee 53       	subi	r30, 0x3E	; 62
    118e:	ff 4f       	sbci	r31, 0xFF	; 255
    1190:	99 27       	eor	r25, r25
    1192:	33 27       	eor	r19, r19
    1194:	ee 24       	eor	r14, r14
    1196:	ff 24       	eor	r15, r15
    1198:	a7 01       	movw	r20, r14
    119a:	e7 01       	movw	r28, r14
    119c:	05 90       	lpm	r0, Z+
    119e:	08 94       	sec
    11a0:	07 94       	ror	r0
    11a2:	28 f4       	brcc	.+10     	; 0x11ae <__ftoa_engine+0x80>
    11a4:	36 0f       	add	r19, r22
    11a6:	e7 1e       	adc	r14, r23
    11a8:	f8 1e       	adc	r15, r24
    11aa:	49 1f       	adc	r20, r25
    11ac:	51 1d       	adc	r21, r1
    11ae:	66 0f       	add	r22, r22
    11b0:	77 1f       	adc	r23, r23
    11b2:	88 1f       	adc	r24, r24
    11b4:	99 1f       	adc	r25, r25
    11b6:	06 94       	lsr	r0
    11b8:	a1 f7       	brne	.-24     	; 0x11a2 <__ftoa_engine+0x74>
    11ba:	05 90       	lpm	r0, Z+
    11bc:	07 94       	ror	r0
    11be:	28 f4       	brcc	.+10     	; 0x11ca <__ftoa_engine+0x9c>
    11c0:	e7 0e       	add	r14, r23
    11c2:	f8 1e       	adc	r15, r24
    11c4:	49 1f       	adc	r20, r25
    11c6:	56 1f       	adc	r21, r22
    11c8:	c1 1d       	adc	r28, r1
    11ca:	77 0f       	add	r23, r23
    11cc:	88 1f       	adc	r24, r24
    11ce:	99 1f       	adc	r25, r25
    11d0:	66 1f       	adc	r22, r22
    11d2:	06 94       	lsr	r0
    11d4:	a1 f7       	brne	.-24     	; 0x11be <__ftoa_engine+0x90>
    11d6:	05 90       	lpm	r0, Z+
    11d8:	07 94       	ror	r0
    11da:	28 f4       	brcc	.+10     	; 0x11e6 <__ftoa_engine+0xb8>
    11dc:	f8 0e       	add	r15, r24
    11de:	49 1f       	adc	r20, r25
    11e0:	56 1f       	adc	r21, r22
    11e2:	c7 1f       	adc	r28, r23
    11e4:	d1 1d       	adc	r29, r1
    11e6:	88 0f       	add	r24, r24
    11e8:	99 1f       	adc	r25, r25
    11ea:	66 1f       	adc	r22, r22
    11ec:	77 1f       	adc	r23, r23
    11ee:	06 94       	lsr	r0
    11f0:	a1 f7       	brne	.-24     	; 0x11da <__ftoa_engine+0xac>
    11f2:	05 90       	lpm	r0, Z+
    11f4:	07 94       	ror	r0
    11f6:	20 f4       	brcc	.+8      	; 0x1200 <__ftoa_engine+0xd2>
    11f8:	49 0f       	add	r20, r25
    11fa:	56 1f       	adc	r21, r22
    11fc:	c7 1f       	adc	r28, r23
    11fe:	d8 1f       	adc	r29, r24
    1200:	99 0f       	add	r25, r25
    1202:	66 1f       	adc	r22, r22
    1204:	77 1f       	adc	r23, r23
    1206:	88 1f       	adc	r24, r24
    1208:	06 94       	lsr	r0
    120a:	a9 f7       	brne	.-22     	; 0x11f6 <__ftoa_engine+0xc8>
    120c:	84 91       	lpm	r24, Z
    120e:	10 95       	com	r17
    1210:	17 70       	andi	r17, 0x07	; 7
    1212:	41 f0       	breq	.+16     	; 0x1224 <__ftoa_engine+0xf6>
    1214:	d6 95       	lsr	r29
    1216:	c7 95       	ror	r28
    1218:	57 95       	ror	r21
    121a:	47 95       	ror	r20
    121c:	f7 94       	ror	r15
    121e:	e7 94       	ror	r14
    1220:	1a 95       	dec	r17
    1222:	c1 f7       	brne	.-16     	; 0x1214 <__ftoa_engine+0xe6>
    1224:	e8 e6       	ldi	r30, 0x68	; 104
    1226:	f0 e0       	ldi	r31, 0x00	; 0
    1228:	68 94       	set
    122a:	15 90       	lpm	r1, Z+
    122c:	15 91       	lpm	r17, Z+
    122e:	35 91       	lpm	r19, Z+
    1230:	65 91       	lpm	r22, Z+
    1232:	95 91       	lpm	r25, Z+
    1234:	05 90       	lpm	r0, Z+
    1236:	7f e2       	ldi	r23, 0x2F	; 47
    1238:	73 95       	inc	r23
    123a:	e1 18       	sub	r14, r1
    123c:	f1 0a       	sbc	r15, r17
    123e:	43 0b       	sbc	r20, r19
    1240:	56 0b       	sbc	r21, r22
    1242:	c9 0b       	sbc	r28, r25
    1244:	d0 09       	sbc	r29, r0
    1246:	c0 f7       	brcc	.-16     	; 0x1238 <__ftoa_engine+0x10a>
    1248:	e1 0c       	add	r14, r1
    124a:	f1 1e       	adc	r15, r17
    124c:	43 1f       	adc	r20, r19
    124e:	56 1f       	adc	r21, r22
    1250:	c9 1f       	adc	r28, r25
    1252:	d0 1d       	adc	r29, r0
    1254:	7e f4       	brtc	.+30     	; 0x1274 <__ftoa_engine+0x146>
    1256:	70 33       	cpi	r23, 0x30	; 48
    1258:	11 f4       	brne	.+4      	; 0x125e <__ftoa_engine+0x130>
    125a:	8a 95       	dec	r24
    125c:	e6 cf       	rjmp	.-52     	; 0x122a <__ftoa_engine+0xfc>
    125e:	e8 94       	clt
    1260:	01 50       	subi	r16, 0x01	; 1
    1262:	30 f0       	brcs	.+12     	; 0x1270 <__ftoa_engine+0x142>
    1264:	08 0f       	add	r16, r24
    1266:	0a f4       	brpl	.+2      	; 0x126a <__ftoa_engine+0x13c>
    1268:	00 27       	eor	r16, r16
    126a:	02 17       	cp	r16, r18
    126c:	08 f4       	brcc	.+2      	; 0x1270 <__ftoa_engine+0x142>
    126e:	20 2f       	mov	r18, r16
    1270:	23 95       	inc	r18
    1272:	02 2f       	mov	r16, r18
    1274:	7a 33       	cpi	r23, 0x3A	; 58
    1276:	28 f0       	brcs	.+10     	; 0x1282 <__ftoa_engine+0x154>
    1278:	79 e3       	ldi	r23, 0x39	; 57
    127a:	7d 93       	st	X+, r23
    127c:	2a 95       	dec	r18
    127e:	e9 f7       	brne	.-6      	; 0x127a <__ftoa_engine+0x14c>
    1280:	10 c0       	rjmp	.+32     	; 0x12a2 <__ftoa_engine+0x174>
    1282:	7d 93       	st	X+, r23
    1284:	2a 95       	dec	r18
    1286:	89 f6       	brne	.-94     	; 0x122a <__ftoa_engine+0xfc>
    1288:	06 94       	lsr	r0
    128a:	97 95       	ror	r25
    128c:	67 95       	ror	r22
    128e:	37 95       	ror	r19
    1290:	17 95       	ror	r17
    1292:	17 94       	ror	r1
    1294:	e1 18       	sub	r14, r1
    1296:	f1 0a       	sbc	r15, r17
    1298:	43 0b       	sbc	r20, r19
    129a:	56 0b       	sbc	r21, r22
    129c:	c9 0b       	sbc	r28, r25
    129e:	d0 09       	sbc	r29, r0
    12a0:	98 f0       	brcs	.+38     	; 0x12c8 <__ftoa_engine+0x19a>
    12a2:	23 95       	inc	r18
    12a4:	7e 91       	ld	r23, -X
    12a6:	73 95       	inc	r23
    12a8:	7a 33       	cpi	r23, 0x3A	; 58
    12aa:	08 f0       	brcs	.+2      	; 0x12ae <__ftoa_engine+0x180>
    12ac:	70 e3       	ldi	r23, 0x30	; 48
    12ae:	7c 93       	st	X, r23
    12b0:	20 13       	cpse	r18, r16
    12b2:	b8 f7       	brcc	.-18     	; 0x12a2 <__ftoa_engine+0x174>
    12b4:	7e 91       	ld	r23, -X
    12b6:	70 61       	ori	r23, 0x10	; 16
    12b8:	7d 93       	st	X+, r23
    12ba:	30 f0       	brcs	.+12     	; 0x12c8 <__ftoa_engine+0x19a>
    12bc:	83 95       	inc	r24
    12be:	71 e3       	ldi	r23, 0x31	; 49
    12c0:	7d 93       	st	X+, r23
    12c2:	70 e3       	ldi	r23, 0x30	; 48
    12c4:	2a 95       	dec	r18
    12c6:	e1 f7       	brne	.-8      	; 0x12c0 <__ftoa_engine+0x192>
    12c8:	11 24       	eor	r1, r1
    12ca:	ef 90       	pop	r14
    12cc:	ff 90       	pop	r15
    12ce:	0f 91       	pop	r16
    12d0:	1f 91       	pop	r17
    12d2:	cf 91       	pop	r28
    12d4:	df 91       	pop	r29
    12d6:	99 27       	eor	r25, r25
    12d8:	87 fd       	sbrc	r24, 7
    12da:	90 95       	com	r25
    12dc:	08 95       	ret

000012de <strnlen_P>:
    12de:	fc 01       	movw	r30, r24
    12e0:	05 90       	lpm	r0, Z+
    12e2:	61 50       	subi	r22, 0x01	; 1
    12e4:	70 40       	sbci	r23, 0x00	; 0
    12e6:	01 10       	cpse	r0, r1
    12e8:	d8 f7       	brcc	.-10     	; 0x12e0 <strnlen_P+0x2>
    12ea:	80 95       	com	r24
    12ec:	90 95       	com	r25
    12ee:	8e 0f       	add	r24, r30
    12f0:	9f 1f       	adc	r25, r31
    12f2:	08 95       	ret

000012f4 <strnlen>:
    12f4:	fc 01       	movw	r30, r24
    12f6:	61 50       	subi	r22, 0x01	; 1
    12f8:	70 40       	sbci	r23, 0x00	; 0
    12fa:	01 90       	ld	r0, Z+
    12fc:	01 10       	cpse	r0, r1
    12fe:	d8 f7       	brcc	.-10     	; 0x12f6 <strnlen+0x2>
    1300:	80 95       	com	r24
    1302:	90 95       	com	r25
    1304:	8e 0f       	add	r24, r30
    1306:	9f 1f       	adc	r25, r31
    1308:	08 95       	ret

0000130a <fputc>:
    130a:	0f 93       	push	r16
    130c:	1f 93       	push	r17
    130e:	cf 93       	push	r28
    1310:	df 93       	push	r29
    1312:	fb 01       	movw	r30, r22
    1314:	23 81       	ldd	r18, Z+3	; 0x03
    1316:	21 fd       	sbrc	r18, 1
    1318:	03 c0       	rjmp	.+6      	; 0x1320 <fputc+0x16>
    131a:	8f ef       	ldi	r24, 0xFF	; 255
    131c:	9f ef       	ldi	r25, 0xFF	; 255
    131e:	2c c0       	rjmp	.+88     	; 0x1378 <fputc+0x6e>
    1320:	22 ff       	sbrs	r18, 2
    1322:	16 c0       	rjmp	.+44     	; 0x1350 <fputc+0x46>
    1324:	46 81       	ldd	r20, Z+6	; 0x06
    1326:	57 81       	ldd	r21, Z+7	; 0x07
    1328:	24 81       	ldd	r18, Z+4	; 0x04
    132a:	35 81       	ldd	r19, Z+5	; 0x05
    132c:	42 17       	cp	r20, r18
    132e:	53 07       	cpc	r21, r19
    1330:	44 f4       	brge	.+16     	; 0x1342 <fputc+0x38>
    1332:	a0 81       	ld	r26, Z
    1334:	b1 81       	ldd	r27, Z+1	; 0x01
    1336:	9d 01       	movw	r18, r26
    1338:	2f 5f       	subi	r18, 0xFF	; 255
    133a:	3f 4f       	sbci	r19, 0xFF	; 255
    133c:	31 83       	std	Z+1, r19	; 0x01
    133e:	20 83       	st	Z, r18
    1340:	8c 93       	st	X, r24
    1342:	26 81       	ldd	r18, Z+6	; 0x06
    1344:	37 81       	ldd	r19, Z+7	; 0x07
    1346:	2f 5f       	subi	r18, 0xFF	; 255
    1348:	3f 4f       	sbci	r19, 0xFF	; 255
    134a:	37 83       	std	Z+7, r19	; 0x07
    134c:	26 83       	std	Z+6, r18	; 0x06
    134e:	14 c0       	rjmp	.+40     	; 0x1378 <fputc+0x6e>
    1350:	8b 01       	movw	r16, r22
    1352:	ec 01       	movw	r28, r24
    1354:	fb 01       	movw	r30, r22
    1356:	00 84       	ldd	r0, Z+8	; 0x08
    1358:	f1 85       	ldd	r31, Z+9	; 0x09
    135a:	e0 2d       	mov	r30, r0
    135c:	09 95       	icall
    135e:	89 2b       	or	r24, r25
    1360:	e1 f6       	brne	.-72     	; 0x131a <fputc+0x10>
    1362:	d8 01       	movw	r26, r16
    1364:	16 96       	adiw	r26, 0x06	; 6
    1366:	8d 91       	ld	r24, X+
    1368:	9c 91       	ld	r25, X
    136a:	17 97       	sbiw	r26, 0x07	; 7
    136c:	01 96       	adiw	r24, 0x01	; 1
    136e:	17 96       	adiw	r26, 0x07	; 7
    1370:	9c 93       	st	X, r25
    1372:	8e 93       	st	-X, r24
    1374:	16 97       	sbiw	r26, 0x06	; 6
    1376:	ce 01       	movw	r24, r28
    1378:	df 91       	pop	r29
    137a:	cf 91       	pop	r28
    137c:	1f 91       	pop	r17
    137e:	0f 91       	pop	r16
    1380:	08 95       	ret

00001382 <__ultoa_invert>:
    1382:	fa 01       	movw	r30, r20
    1384:	aa 27       	eor	r26, r26
    1386:	28 30       	cpi	r18, 0x08	; 8
    1388:	51 f1       	breq	.+84     	; 0x13de <__ultoa_invert+0x5c>
    138a:	20 31       	cpi	r18, 0x10	; 16
    138c:	81 f1       	breq	.+96     	; 0x13ee <__ultoa_invert+0x6c>
    138e:	e8 94       	clt
    1390:	6f 93       	push	r22
    1392:	6e 7f       	andi	r22, 0xFE	; 254
    1394:	6e 5f       	subi	r22, 0xFE	; 254
    1396:	7f 4f       	sbci	r23, 0xFF	; 255
    1398:	8f 4f       	sbci	r24, 0xFF	; 255
    139a:	9f 4f       	sbci	r25, 0xFF	; 255
    139c:	af 4f       	sbci	r26, 0xFF	; 255
    139e:	b1 e0       	ldi	r27, 0x01	; 1
    13a0:	3e d0       	rcall	.+124    	; 0x141e <__ultoa_invert+0x9c>
    13a2:	b4 e0       	ldi	r27, 0x04	; 4
    13a4:	3c d0       	rcall	.+120    	; 0x141e <__ultoa_invert+0x9c>
    13a6:	67 0f       	add	r22, r23
    13a8:	78 1f       	adc	r23, r24
    13aa:	89 1f       	adc	r24, r25
    13ac:	9a 1f       	adc	r25, r26
    13ae:	a1 1d       	adc	r26, r1
    13b0:	68 0f       	add	r22, r24
    13b2:	79 1f       	adc	r23, r25
    13b4:	8a 1f       	adc	r24, r26
    13b6:	91 1d       	adc	r25, r1
    13b8:	a1 1d       	adc	r26, r1
    13ba:	6a 0f       	add	r22, r26
    13bc:	71 1d       	adc	r23, r1
    13be:	81 1d       	adc	r24, r1
    13c0:	91 1d       	adc	r25, r1
    13c2:	a1 1d       	adc	r26, r1
    13c4:	20 d0       	rcall	.+64     	; 0x1406 <__ultoa_invert+0x84>
    13c6:	09 f4       	brne	.+2      	; 0x13ca <__ultoa_invert+0x48>
    13c8:	68 94       	set
    13ca:	3f 91       	pop	r19
    13cc:	2a e0       	ldi	r18, 0x0A	; 10
    13ce:	26 9f       	mul	r18, r22
    13d0:	11 24       	eor	r1, r1
    13d2:	30 19       	sub	r19, r0
    13d4:	30 5d       	subi	r19, 0xD0	; 208
    13d6:	31 93       	st	Z+, r19
    13d8:	de f6       	brtc	.-74     	; 0x1390 <__ultoa_invert+0xe>
    13da:	cf 01       	movw	r24, r30
    13dc:	08 95       	ret
    13de:	46 2f       	mov	r20, r22
    13e0:	47 70       	andi	r20, 0x07	; 7
    13e2:	40 5d       	subi	r20, 0xD0	; 208
    13e4:	41 93       	st	Z+, r20
    13e6:	b3 e0       	ldi	r27, 0x03	; 3
    13e8:	0f d0       	rcall	.+30     	; 0x1408 <__ultoa_invert+0x86>
    13ea:	c9 f7       	brne	.-14     	; 0x13de <__ultoa_invert+0x5c>
    13ec:	f6 cf       	rjmp	.-20     	; 0x13da <__ultoa_invert+0x58>
    13ee:	46 2f       	mov	r20, r22
    13f0:	4f 70       	andi	r20, 0x0F	; 15
    13f2:	40 5d       	subi	r20, 0xD0	; 208
    13f4:	4a 33       	cpi	r20, 0x3A	; 58
    13f6:	18 f0       	brcs	.+6      	; 0x13fe <__ultoa_invert+0x7c>
    13f8:	49 5d       	subi	r20, 0xD9	; 217
    13fa:	31 fd       	sbrc	r19, 1
    13fc:	40 52       	subi	r20, 0x20	; 32
    13fe:	41 93       	st	Z+, r20
    1400:	02 d0       	rcall	.+4      	; 0x1406 <__ultoa_invert+0x84>
    1402:	a9 f7       	brne	.-22     	; 0x13ee <__ultoa_invert+0x6c>
    1404:	ea cf       	rjmp	.-44     	; 0x13da <__ultoa_invert+0x58>
    1406:	b4 e0       	ldi	r27, 0x04	; 4
    1408:	a6 95       	lsr	r26
    140a:	97 95       	ror	r25
    140c:	87 95       	ror	r24
    140e:	77 95       	ror	r23
    1410:	67 95       	ror	r22
    1412:	ba 95       	dec	r27
    1414:	c9 f7       	brne	.-14     	; 0x1408 <__ultoa_invert+0x86>
    1416:	00 97       	sbiw	r24, 0x00	; 0
    1418:	61 05       	cpc	r22, r1
    141a:	71 05       	cpc	r23, r1
    141c:	08 95       	ret
    141e:	9b 01       	movw	r18, r22
    1420:	ac 01       	movw	r20, r24
    1422:	0a 2e       	mov	r0, r26
    1424:	06 94       	lsr	r0
    1426:	57 95       	ror	r21
    1428:	47 95       	ror	r20
    142a:	37 95       	ror	r19
    142c:	27 95       	ror	r18
    142e:	ba 95       	dec	r27
    1430:	c9 f7       	brne	.-14     	; 0x1424 <__ultoa_invert+0xa2>
    1432:	62 0f       	add	r22, r18
    1434:	73 1f       	adc	r23, r19
    1436:	84 1f       	adc	r24, r20
    1438:	95 1f       	adc	r25, r21
    143a:	a0 1d       	adc	r26, r0
    143c:	08 95       	ret

0000143e <__prologue_saves__>:
    143e:	2f 92       	push	r2
    1440:	3f 92       	push	r3
    1442:	4f 92       	push	r4
    1444:	5f 92       	push	r5
    1446:	6f 92       	push	r6
    1448:	7f 92       	push	r7
    144a:	8f 92       	push	r8
    144c:	9f 92       	push	r9
    144e:	af 92       	push	r10
    1450:	bf 92       	push	r11
    1452:	cf 92       	push	r12
    1454:	df 92       	push	r13
    1456:	ef 92       	push	r14
    1458:	ff 92       	push	r15
    145a:	0f 93       	push	r16
    145c:	1f 93       	push	r17
    145e:	cf 93       	push	r28
    1460:	df 93       	push	r29
    1462:	cd b7       	in	r28, 0x3d	; 61
    1464:	de b7       	in	r29, 0x3e	; 62
    1466:	ca 1b       	sub	r28, r26
    1468:	db 0b       	sbc	r29, r27
    146a:	0f b6       	in	r0, 0x3f	; 63
    146c:	f8 94       	cli
    146e:	de bf       	out	0x3e, r29	; 62
    1470:	0f be       	out	0x3f, r0	; 63
    1472:	cd bf       	out	0x3d, r28	; 61
    1474:	09 94       	ijmp

00001476 <__epilogue_restores__>:
    1476:	2a 88       	ldd	r2, Y+18	; 0x12
    1478:	39 88       	ldd	r3, Y+17	; 0x11
    147a:	48 88       	ldd	r4, Y+16	; 0x10
    147c:	5f 84       	ldd	r5, Y+15	; 0x0f
    147e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1480:	7d 84       	ldd	r7, Y+13	; 0x0d
    1482:	8c 84       	ldd	r8, Y+12	; 0x0c
    1484:	9b 84       	ldd	r9, Y+11	; 0x0b
    1486:	aa 84       	ldd	r10, Y+10	; 0x0a
    1488:	b9 84       	ldd	r11, Y+9	; 0x09
    148a:	c8 84       	ldd	r12, Y+8	; 0x08
    148c:	df 80       	ldd	r13, Y+7	; 0x07
    148e:	ee 80       	ldd	r14, Y+6	; 0x06
    1490:	fd 80       	ldd	r15, Y+5	; 0x05
    1492:	0c 81       	ldd	r16, Y+4	; 0x04
    1494:	1b 81       	ldd	r17, Y+3	; 0x03
    1496:	aa 81       	ldd	r26, Y+2	; 0x02
    1498:	b9 81       	ldd	r27, Y+1	; 0x01
    149a:	ce 0f       	add	r28, r30
    149c:	d1 1d       	adc	r29, r1
    149e:	0f b6       	in	r0, 0x3f	; 63
    14a0:	f8 94       	cli
    14a2:	de bf       	out	0x3e, r29	; 62
    14a4:	0f be       	out	0x3f, r0	; 63
    14a6:	cd bf       	out	0x3d, r28	; 61
    14a8:	ed 01       	movw	r28, r26
    14aa:	08 95       	ret

000014ac <_exit>:
    14ac:	f8 94       	cli

000014ae <__stop_program>:
    14ae:	ff cf       	rjmp	.-2      	; 0x14ae <__stop_program>
